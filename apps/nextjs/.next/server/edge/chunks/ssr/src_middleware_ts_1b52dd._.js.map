{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/apps/nextjs/src/middleware.ts"],"sourcesContent":["import { clerkMiddleware, createRouteMatcher } from \"@clerk/nextjs/server\";\nimport Cidr from \"ip-cidr\";\nimport { NextResponse } from \"next/server\";\n\nconst isProtectedRoute = createRouteMatcher([\n  \"/followers(.*)\",\n  \"/following(.*)\",\n  \"/ratings(.*)\",\n  \"/watchlist(.*)\",\n]);\n\nconst isClerkWebhookRoute = createRouteMatcher([\"/api/clerk-webhook(.*)\"]);\n\nlet cachedIps: string[] = [];\nlet lastFetchTime = 0;\nconst IP_CACHE_DURATION = 60 * 60 * 1000;\n\ninterface WebhookIps {\n  us?: string[];\n  \"us-east\"?: string[];\n  eu?: string[];\n  in?: string[];\n}\n\nasync function fetchAllowedIps(): Promise<string[]> {\n  if (Date.now() - lastFetchTime < IP_CACHE_DURATION && cachedIps.length > 0) {\n    return cachedIps;\n  }\n\n  try {\n    const response = await fetch(\"https://docs.svix.com/webhook-ips.json\");\n    const data = (await response.json()) as WebhookIps;\n    cachedIps = Object.values(data)\n      .flat()\n      .filter((ip): ip is string => typeof ip === \"string\");\n    lastFetchTime = Date.now();\n  } catch (error) {\n    console.error(\"Failed to fetch allowed IPs\", error);\n  }\n\n  return cachedIps;\n}\n\nfunction isIpAllowed(ip: string, allowedIps: string[]): boolean {\n  return allowedIps.some((allowedIp) => {\n    if (allowedIp.includes(\"/\")) {\n      const cidr = new Cidr(allowedIp);\n      return cidr.contains(ip);\n    }\n    return ip === allowedIp;\n  });\n}\n\nexport default clerkMiddleware(async (auth, req) => {\n  if (isProtectedRoute(req)) {\n    auth().protect();\n  }\n\n  if (isClerkWebhookRoute(req)) {\n    const allowedIps = await fetchAllowedIps();\n    const ip = req.headers.get(\"x-forwarded-for\") ?? req.ip;\n\n    if (!ip || !isIpAllowed(ip, allowedIps)) {\n      return new NextResponse(\"Unauthorized\", { status: 401 });\n    }\n  }\n\n  return NextResponse.next();\n});\n\nexport const config = {\n  matcher: [\n    \"/((?!_next|[^?]*\\\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)\",\n    \"/(api|trpc)(.*)\",\n  ],\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;AAIA,MAAM,mBAAmB,CAAA,GAAA,gTAAA,CAAA,qBAAkB,AAAD,EAAE;IAC1C;IACA;IACA;IACA;CACD;AAED,MAAM,sBAAsB,CAAA,GAAA,gTAAA,CAAA,qBAAkB,AAAD,EAAE;IAAC;CAAyB;AAEzE,IAAI,YAAsB,EAAE;AAC5B,IAAI,gBAAgB;AACpB,MAAM,oBAAoB,KAAK,KAAK;AASpC,eAAe;IACb,IAAI,KAAK,GAAG,KAAK,gBAAgB,qBAAqB,UAAU,MAAM,GAAG,GAAG;QAC1E,OAAO;IACT;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,YAAY,OAAO,MAAM,CAAC,MACvB,IAAI,GACJ,MAAM,CAAC,CAAC,KAAqB,OAAO,OAAO;QAC9C,gBAAgB,KAAK,GAAG;IAC1B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;IAC/C;IAEA,OAAO;AACT;AAEA,SAAS,YAAY,EAAU,EAAE,UAAoB;IACnD,OAAO,WAAW,IAAI,CAAC,CAAC;QACtB,IAAI,UAAU,QAAQ,CAAC,MAAM;YAC3B,MAAM,OAAO,IAAI,0LAAA,CAAA,UAAI,CAAC;YACtB,OAAO,KAAK,QAAQ,CAAC;QACvB;QACA,OAAO,OAAO;IAChB;AACF;uCAEe,CAAA,GAAA,mTAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,MAAM;IAC1C,IAAI,iBAAiB,MAAM;QACzB,OAAO,OAAO;IAChB;IAEA,IAAI,oBAAoB,MAAM;QAC5B,MAAM,aAAa,MAAM;QACzB,MAAM,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,EAAE;QAEvD,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,aAAa;YACvC,OAAO,IAAI,0RAAA,CAAA,eAAY,CAAC,gBAAgB;gBAAE,QAAQ;YAAI;QACxD;IACF;IAEA,OAAO,0RAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;KACD;AACH"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}