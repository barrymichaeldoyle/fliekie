{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/components.server.ts"],"sourcesContent":["import { ClerkProvider } from './app-router/server/ClerkProvider';\nimport { Protect, SignedIn, SignedOut } from './app-router/server/controlComponents';\n\nexport { ClerkProvider, SignedOut, SignedIn, Protect };\n\nexport type ServerComponentsServerModuleTypes = {\n  ClerkProvider: typeof ClerkProvider;\n  SignedIn: typeof SignedIn;\n  SignedOut: typeof SignedOut;\n  Protect: typeof Protect;\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/constants.ts"],"sourcesContent":["import { apiUrlFromPublishableKey } from '@clerk/shared/apiUrlFromPublishableKey';\nimport { isTruthy } from '@clerk/shared/underscore';\n\nexport const CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || '';\nexport const CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS_URL || '';\nexport const API_VERSION = process.env.CLERK_API_VERSION || 'v1';\nexport const SECRET_KEY = process.env.CLERK_SECRET_KEY || '';\nexport const PUBLISHABLE_KEY = process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '';\nexport const ENCRYPTION_KEY = process.env.CLERK_ENCRYPTION_KEY || '';\nexport const API_URL = process.env.CLERK_API_URL || apiUrlFromPublishableKey(PUBLISHABLE_KEY);\nexport const DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || '';\nexport const PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || '';\nexport const IS_SATELLITE = isTruthy(process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE) || false;\nexport const SIGN_IN_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '';\nexport const SIGN_UP_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '';\nexport const SDK_METADATA = {\n  name: PACKAGE_NAME,\n  version: PACKAGE_VERSION,\n  environment: process.env.NODE_ENV,\n};\n\nexport const TELEMETRY_DISABLED = isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DISABLED);\nexport const TELEMETRY_DEBUG = isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DEBUG);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGO,MAAM,mBAAmB,QAAQ,GAAA,CAAI,4BAAA,IAAgC;AACrE,MAAM,eAAe,QAAQ,GAAA,CAAI,wBAAA,IAA4B;AAC7D,MAAM,cAAc,QAAQ,GAAA,CAAI,iBAAA,IAAqB;AACrD,MAAM,aAAa,QAAQ,GAAA,CAAI,gBAAA,IAAoB;AACnD,MAAM,kBAAkB,kGAAiD;AACzE,MAAM,iBAAiB,QAAQ,GAAA,CAAI,oBAAA,IAAwB;AAC3D,MAAM,UAAU,QAAQ,GAAA,CAAI,aAAA,IAAiB,CAAA,GAAA,gRAAA,CAAA,2BAAA,EAAyB;AACtE,MAAM,SAAS,QAAQ,GAAA,CAAI,wBAAA,IAA4B;AACvD,MAAM,YAAY,QAAQ,GAAA,CAAI,2BAAA,IAA+B;AAC7D,MAAM,eAAe,CAAA,GAAA,gRAAA,CAAA,WAAA,EAAS,QAAQ,GAAA,CAAI,8BAA8B,KAAK;AAC7E,MAAM,cAAc,QAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,cAAc,QAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,eAAe;IAC1B,MAAM;IACN,SAAS;IACT,WAAA;AACF;AAEO,MAAM,qBAAqB,CAAA,GAAA,gRAAA,CAAA,WAAA,EAAS,QAAQ,GAAA,CAAI,oCAAoC;AACpF,MAAM,kBAAkB,CAAA,GAAA,gRAAA,CAAA,WAAA,EAAS,QAAQ,GAAA,CAAI,iCAAiC"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/utils/mergeNextClerkPropsWithEnv.ts"],"sourcesContent":["import { isTruthy } from '@clerk/shared/underscore';\n\nimport { SDK_METADATA } from '../server/constants';\nimport type { NextClerkProviderProps } from '../types';\n\n// @ts-ignore - https://github.com/microsoft/TypeScript/issues/47663\nexport const mergeNextClerkPropsWithEnv = (props: Omit<NextClerkProviderProps, 'children'>): any => {\n  return {\n    ...props,\n    publishableKey: props.publishableKey || process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '',\n    clerkJSUrl: props.clerkJSUrl || process.env.NEXT_PUBLIC_CLERK_JS_URL,\n    clerkJSVersion: props.clerkJSVersion || process.env.NEXT_PUBLIC_CLERK_JS_VERSION,\n    proxyUrl: props.proxyUrl || process.env.NEXT_PUBLIC_CLERK_PROXY_URL || '',\n    domain: props.domain || process.env.NEXT_PUBLIC_CLERK_DOMAIN || '',\n    isSatellite: props.isSatellite || isTruthy(process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE),\n    signInUrl: props.signInUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '',\n    signUpUrl: props.signUpUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '',\n    signInForceRedirectUrl:\n      props.signInForceRedirectUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL || '',\n    signUpForceRedirectUrl:\n      props.signUpForceRedirectUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL || '',\n    signInFallbackRedirectUrl:\n      props.signInFallbackRedirectUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL || '',\n    signUpFallbackRedirectUrl:\n      props.signUpFallbackRedirectUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL || '',\n    afterSignInUrl: props.afterSignInUrl || process.env.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL || '',\n    afterSignUpUrl: props.afterSignUpUrl || process.env.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL || '',\n    telemetry: props.telemetry ?? {\n      disabled: isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DISABLED),\n      debug: isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DEBUG),\n    },\n    sdkMetadata: SDK_METADATA,\n  };\n};\n"],"names":[],"mappings":";;;;;;;;;AAMO,MAAM,6BAA6B,CAAC;IAN3C,IAAA;IAOE,OAAO;QACL,GAAG,KAAA;QACH,gBAAgB,MAAM,cAAA,sGAAmE;QACzF,YAAY,MAAM,UAAA,IAAc,QAAQ,GAAA,CAAI,wBAAA;QAC5C,gBAAgB,MAAM,cAAA,IAAkB,QAAQ,GAAA,CAAI,4BAAA;QACpD,UAAU,MAAM,QAAA,IAAY,QAAQ,GAAA,CAAI,2BAAA,IAA+B;QACvE,QAAQ,MAAM,MAAA,IAAU,QAAQ,GAAA,CAAI,wBAAA,IAA4B;QAChE,aAAa,MAAM,WAAA,IAAe,CAAA,GAAA,gRAAA,CAAA,WAAA,EAAS,QAAQ,GAAA,CAAI,8BAA8B;QACrF,WAAW,MAAM,SAAA,IAAa,QAAQ,GAAA,CAAI,6BAAA,IAAiC;QAC3E,WAAW,MAAM,SAAA,IAAa,QAAQ,GAAA,CAAI,6BAAA,IAAiC;QAC3E,wBACE,MAAM,sBAAA,IAA0B,QAAQ,GAAA,CAAI,4CAAA,IAAgD;QAC9F,wBACE,MAAM,sBAAA,IAA0B,QAAQ,GAAA,CAAI,4CAAA,IAAgD;QAC9F,2BACE,MAAM,yBAAA,IAA6B,QAAQ,GAAA,CAAI,+CAAA,IAAmD;QACpG,2BACE,MAAM,yBAAA,IAA6B,QAAQ,GAAA,CAAI,+CAAA,IAAmD;QACpG,gBAAgB,MAAM,cAAA,IAAkB,QAAQ,GAAA,CAAI,mCAAA,IAAuC;QAC3F,gBAAgB,MAAM,cAAA,IAAkB,QAAQ,GAAA,CAAI,mCAAA,IAAuC;QAC3F,WAAA,CAAW,KAAA,MAAM,SAAA,KAAN,OAAA,KAAmB;YAC5B,UAAU,CAAA,GAAA,gRAAA,CAAA,WAAA,EAAS,QAAQ,GAAA,CAAI,oCAAoC;YACnE,OAAO,CAAA,GAAA,gRAAA,CAAA,WAAA,EAAS,QAAQ,GAAA,CAAI,iCAAiC;QAC/D;QACA,aAAa,6SAAA,CAAA,eAAA;IACf;AACF"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/app-router/client/ClerkProvider.js/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClientClerkProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClientClerkProvider() from the server but ClientClerkProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/app-router/client/ClerkProvider.js\",\n    \"ClientClerkProvider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qKACA"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/client/ClerkProvider.tsx"],"sourcesContent":["'use client';\nimport { ClerkProvider as ReactClerkProvider } from '@clerk/clerk-react';\nimport { useRouter } from 'next/navigation';\nimport React, { useEffect, useTransition } from 'react';\n\nimport { useSafeLayoutEffect } from '../../client-boundary/hooks/useSafeLayoutEffect';\nimport { ClerkNextOptionsProvider } from '../../client-boundary/NextOptionsContext';\nimport type { NextClerkProviderProps } from '../../types';\nimport { ClerkJSScript } from '../../utils/clerk-js-script';\nimport { mergeNextClerkPropsWithEnv } from '../../utils/mergeNextClerkPropsWithEnv';\nimport { invalidateCacheAction } from '../server-actions';\nimport { useAwaitablePush } from './useAwaitablePush';\nimport { useAwaitableReplace } from './useAwaitableReplace';\n\ndeclare global {\n  export interface Window {\n    __clerk_nav_await: Array<(value: void) => void>;\n    __clerk_nav: (to: string) => Promise<void>;\n    __clerk_internal_invalidateCachePromise: () => void | undefined;\n  }\n}\n\nexport const ClientClerkProvider = (props: NextClerkProviderProps) => {\n  const { __unstable_invokeMiddlewareOnAuthStateChange = true, children } = props;\n  const router = useRouter();\n  const push = useAwaitablePush();\n  const replace = useAwaitableReplace();\n  const [isPending, startTransition] = useTransition();\n\n  useEffect(() => {\n    if (!isPending) {\n      window.__clerk_internal_invalidateCachePromise?.();\n    }\n  }, [isPending]);\n\n  useSafeLayoutEffect(() => {\n    window.__unstable__onBeforeSetActive = () => {\n      /**\n       * We need to invalidate the cache in case the user is navigating to a page that\n       * was previously cached using the auth state that was active at the time.\n       *\n       *  We also need to await for the invalidation to happen before we navigate,\n       * otherwise the navigation will use the cached page.\n       *\n       * For example, if we did not invalidate the flow, the following scenario would be broken:\n       * - The middleware is configured in such a way that it redirects you back to the same page if a certain condition is true (eg, you need to pick an org)\n       * - The user has a <Link href=/> component in the page\n       * - The UB is mounted with afterSignOutUrl=/\n       * - The user clicks the Link. A nav to / happens, a 307 to the current page is returned so a navigation does not take place. The / navigation is now cached as a 307 to the current page\n       * - The user clicks sign out\n       * - We call router.refresh()\n       * - We navigate to / but its cached and instead, we 'redirect' to the current page\n       *\n       *  For more information on cache invalidation, see:\n       * https://nextjs.org/docs/app/building-your-application/caching#invalidation-1\n       */\n      return new Promise(res => {\n        window.__clerk_internal_invalidateCachePromise = res;\n        startTransition(() => {\n          //@ts-expect-error next exists on window\n          if (window.next?.version && typeof window.next.version === 'string' && window.next.version.startsWith('13')) {\n            router.refresh();\n          } else {\n            void invalidateCacheAction();\n          }\n        });\n      });\n    };\n\n    window.__unstable__onAfterSetActive = () => {\n      if (__unstable_invokeMiddlewareOnAuthStateChange) {\n        return router.refresh();\n      }\n    };\n  }, []);\n\n  const mergedProps = mergeNextClerkPropsWithEnv({\n    ...props,\n    routerPush: push,\n    routerReplace: replace,\n  });\n\n  return (\n    <ClerkNextOptionsProvider options={mergedProps}>\n      <ReactClerkProvider {...mergedProps}>\n        <ClerkJSScript router='app' />\n        {children}\n      </ReactClerkProvider>\n    </ClerkNextOptionsProvider>\n  );\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/constants.ts"],"sourcesContent":["const Headers = {\n  NextRewrite: 'x-middleware-rewrite',\n  NextResume: 'x-middleware-next',\n  NextRedirect: 'Location',\n  // Used by next to identify internal navigation for app router\n  NextUrl: 'next-url',\n  NextAction: 'next-action',\n  // Used by next to identify internal navigation for pages router\n  NextjsData: 'x-nextjs-data',\n} as const;\n\nexport const constants = {\n  Headers,\n} as const;\n"],"names":[],"mappings":";;;AAAA,MAAM,UAAU;IACd,aAAa;IACb,YAAY;IACZ,cAAc;IAAA,8DAAA;IAEd,SAAS;IACT,YAAY;IAAA,gEAAA;IAEZ,YAAY;AACd;AAEO,MAAM,YAAY;IACvB;AACF"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/errors.ts"],"sourcesContent":["export const missingDomainAndProxy = `\nMissing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl.\n\n1) With middleware\n   e.g. export default clerkMiddleware({domain:'YOUR_DOMAIN',isSatellite:true}); // or the deprecated authMiddleware()\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_DOMAIN='YOUR_DOMAIN'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'\n   `;\n\nexport const missingSignInUrlInDev = `\nInvalid signInUrl. A satellite application requires a signInUrl for development instances.\nCheck if signInUrl is missing from your configuration or if it is not an absolute URL\n\n1) With middleware\n   e.g. export default clerkMiddleware({signInUrl:'SOME_URL', isSatellite:true}); // or the deprecated authMiddleware()\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_SIGN_IN_URL='SOME_URL'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'`;\n\nexport const receivedRequestForIgnoredRoute = (url: string, matcher: string) =>\n  `Clerk: The middleware was skipped for this request URL: ${url}. For performance reasons, it's recommended to your middleware matcher to:\nexport const config = {\n  matcher: ${matcher},\n};\n\nAlternatively, you can set your own ignoredRoutes. See https://clerk.com/docs/nextjs/middleware\n(This log only appears in development mode)\n`;\n\nexport const getAuthAuthHeaderMissing = () => authAuthHeaderMissing('getAuth');\n\nexport const authAuthHeaderMissing = (helperName = 'auth') =>\n  `Clerk: ${helperName}() was called but Clerk can't detect usage of clerkMiddleware() (or the deprecated authMiddleware()). Please ensure the following:\n-  clerkMiddleware() (or the deprecated authMiddleware()) is used in your Next.js Middleware.\n- Your Middleware matcher is configured to match this route or page.\n- If you are using the src directory, make sure the Middleware file is inside of it.\n\nFor more details, see https://clerk.com/docs/quickstarts/nextjs\n`;\n\nexport const clockSkewDetected = (verifyMessage: string) =>\n  `Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will continuously try to issue new tokens, as the existing ones will be treated as \"expired\" due to clock skew.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${verifyMessage}`;\n\nexport const infiniteRedirectLoopDetected = () =>\n  `Clerk: Infinite redirect loop detected. That usually means that we were not able to determine the auth state for this request. A list of common causes and solutions follows.\n\nReason 1:\nYour Clerk instance keys are incorrect, or you recently changed keys (Publishable Key, Secret Key).\nHow to resolve:\n-> Make sure you're using the correct keys from the Clerk Dashboard. If you changed keys recently, make sure to clear your browser application data and cookies.\n\nReason 2:\nA bug that may have already been fixed in the latest version of Clerk NextJS package.\nHow to resolve:\n-> Make sure you are using the latest version of '@clerk/nextjs' and 'next'.\n`;\n\nexport const informAboutProtectedRouteInfo = (\n  path: string,\n  hasPublicRoutes: boolean,\n  hasIgnoredRoutes: boolean,\n  isApiRoute: boolean,\n  defaultIgnoredRoutes: string[],\n) => {\n  const infoText = isApiRoute\n    ? `INFO: Clerk: The request to ${path} is being protected (401) because there is no signed-in user, and the path is included in \\`apiRoutes\\`. To prevent this behavior, choose one of:`\n    : `INFO: Clerk: The request to ${path} is being redirected because there is no signed-in user, and the path is not included in \\`ignoredRoutes\\` or \\`publicRoutes\\`. To prevent this behavior, choose one of:`;\n  const apiRoutesText = isApiRoute\n    ? `To prevent Clerk authentication from protecting (401) the api route, remove the rule matching \"${path}\" from the \\`apiRoutes\\` array passed to authMiddleware`\n    : undefined;\n  const publicRoutesText = hasPublicRoutes\n    ? `To make the route accessible to both signed in and signed out users, add \"${path}\" to the \\`publicRoutes\\` array passed to authMiddleware`\n    : `To make the route accessible to both signed in and signed out users, pass \\`publicRoutes: [\"${path}\"]\\` to authMiddleware`;\n  const ignoredRoutes = [...defaultIgnoredRoutes, path].map(r => `\"${r}\"`).join(', ');\n  const ignoredRoutesText = hasIgnoredRoutes\n    ? `To prevent Clerk authentication from running at all, add \"${path}\" to the \\`ignoredRoutes\\` array passed to authMiddleware`\n    : `To prevent Clerk authentication from running at all, pass \\`ignoredRoutes: [${ignoredRoutes}]\\` to authMiddleware`;\n  const afterAuthText =\n    \"Pass a custom `afterAuth` to authMiddleware, and replace Clerk's default behavior of redirecting unless a route is included in publicRoutes\";\n\n  return `${infoText}\n\n${[apiRoutesText, publicRoutesText, ignoredRoutesText, afterAuthText]\n  .filter(Boolean)\n  .map((text, index) => `${index + 1}. ${text}`)\n  .join('\\n')}\n\nFor additional information about middleware, please visit https://clerk.com/docs/nextjs/middleware\n(This log only appears in development mode, or if \\`debug: true\\` is passed to authMiddleware)`;\n};\n\nexport const authSignatureInvalid = `Clerk: Unable to verify request, this usually means the Clerk middleware did not run. Ensure Clerk's middleware is properly integrated and matches the current route. For more information, see: https://clerk.com/docs/nextjs/middleware. (code=auth_signature_invalid)`;\n\nexport const encryptionKeyInvalid = `Clerk: Unable to decrypt request data, this usually means the encryption key is invalid. Ensure the encryption key is properly set. For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys. (code=encryption_key_invalid)`;\n"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,wBAAwB,CAAA;;;;;;;;GAAA,CAAA;AAU9B,MAAM,wBAAwB,CAAA;;;;;;;;wCAAA,CAAA;AAU9B,MAAM,iCAAiC,CAAC,KAAa,UAC1D,CAAA,wDAAA,EAA2D,IAAG;;WAAA,EAEnD,QAAO;;;;;AAAA,CAAA;AAOb,MAAM,2BAA2B,IAAM,sBAAsB;AAE7D,MAAM,wBAAwB,CAAC,aAAa,MAAA,GACjD,CAAA,OAAA,EAAU,WAAU;;;;;;AAAA,CAAA;AAQf,MAAM,oBAAoB,CAAC,gBAChC,CAAA;;;;;;AAAA,EAMA,cAAa,CAAA;AAER,MAAM,+BAA+B,IAC1C,CAAA;;;;;;;;;;;AAAA,CAAA;AAaK,MAAM,gCAAgC,CAC3C,MACA,iBACA,kBACA,YACA;IAEA,MAAM,WAAW,aACb,CAAA,4BAAA,EAA+B,KAAI,iJAAA,CAAA,GACnC,CAAA,4BAAA,EAA+B,KAAI,wKAAA,CAAA;IACvC,MAAM,gBAAgB,aAClB,CAAA,+FAAA,EAAkG,KAAI,uDAAA,CAAA,GACtG,KAAA;IACJ,MAAM,mBAAmB,kBACrB,CAAA,0EAAA,EAA6E,KAAI,wDAAA,CAAA,GACjF,CAAA,4FAAA,EAA+F,KAAI,sBAAA,CAAA;IACvG,MAAM,gBAAgB;WAAI;QAAsB;KAAI,CAAE,GAAA,CAAI,CAAA,IAAK,CAAA,CAAA,EAAI,EAAC,CAAA,CAAG,EAAE,IAAA,CAAK;IAC9E,MAAM,oBAAoB,mBACtB,CAAA,0DAAA,EAA6D,KAAI,yDAAA,CAAA,GACjE,CAAA,4EAAA,EAA+E,cAAa,qBAAA,CAAA;IAChG,MAAM,gBACJ;IAEF,OAAO,CAAA,EAAG,SAAQ;;AAAA,EAElB;QAAC;QAAe;QAAkB;QAAmB;KAAa,CACjE,MAAA,CAAO,SACP,GAAA,CAAI,CAAC,MAAM,QAAU,CAAA,EAAG,QAAQ,EAAC,EAAA,EAAK,KAAI,CAAE,EAC5C,IAAA,CAAK,MAAK;;;8FAAA,CAAA;AAIb;AAEO,MAAM,uBAAuB,CAAA,wQAAA,CAAA;AAE7B,MAAM,uBAAuB,CAAA,oQAAA,CAAA"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/errorThrower.ts"],"sourcesContent":["import { buildErrorThrower } from '@clerk/shared/error';\n\nexport const errorThrower = buildErrorThrower({ packageName: '@clerk/nextjs' });\n"],"names":[],"mappings":";;;;;;;AAEO,MAAM,eAAe,CAAA,GAAA,gRAAA,CAAA,oBAAA,EAAkB;IAAE,aAAa;AAAgB"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/utils.ts"],"sourcesContent":["import type { AuthenticateRequestOptions, ClerkRequest, RequestState } from '@clerk/backend/internal';\nimport { constants } from '@clerk/backend/internal';\nimport { handleValueOrFn } from '@clerk/shared/handleValueOrFn';\nimport { isDevelopmentFromSecretKey } from '@clerk/shared/keys';\nimport { logger } from '@clerk/shared/logger';\nimport { isHttpOrHttps } from '@clerk/shared/proxy';\nimport AES from 'crypto-js/aes';\nimport encUtf8 from 'crypto-js/enc-utf8';\nimport hmacSHA1 from 'crypto-js/hmac-sha1';\nimport type { NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\n\nimport { constants as nextConstants } from '../constants';\nimport { DOMAIN, ENCRYPTION_KEY, IS_SATELLITE, PROXY_URL, SECRET_KEY, SIGN_IN_URL } from './constants';\nimport { authSignatureInvalid, encryptionKeyInvalid, missingDomainAndProxy, missingSignInUrlInDev } from './errors';\nimport { errorThrower } from './errorThrower';\nimport type { RequestLike } from './types';\n\nexport function setCustomAttributeOnRequest(req: RequestLike, key: string, value: string): void {\n  Object.assign(req, { [key]: value });\n}\n\nexport function getCustomAttributeFromRequest(req: RequestLike, key: string): string | null | undefined {\n  // @ts-expect-error - TS doesn't like indexing into RequestLike\n  return key in req ? req[key] : undefined;\n}\n\nexport function getAuthKeyFromRequest(\n  req: RequestLike,\n  key: keyof typeof constants.Attributes,\n): string | null | undefined {\n  return getCustomAttributeFromRequest(req, constants.Attributes[key]) || getHeader(req, constants.Headers[key]);\n}\n\n// TODO: Rename Auth status and align the naming across media\nexport function getAuthStatusFromRequest(req: RequestLike): string | null | undefined {\n  return (\n    getCustomAttributeFromRequest(req, constants.Attributes.AuthStatus) || getHeader(req, constants.Headers.AuthStatus)\n  );\n}\n\nexport function getHeader(req: RequestLike, name: string): string | null | undefined {\n  if (isNextRequest(req)) {\n    return req.headers.get(name);\n  }\n\n  // If no header has been determined for IncomingMessage case, check if available within private `socket` headers\n  // When deployed to vercel, req.headers for API routes is a `IncomingHttpHeaders` key-val object which does not follow\n  // the Headers spec so the name is no longer case-insensitive.\n  return req.headers[name] || req.headers[name.toLowerCase()] || (req.socket as any)?._httpMessage?.getHeader(name);\n}\n\nexport function getCookie(req: RequestLike, name: string): string | undefined {\n  if (isNextRequest(req)) {\n    // Nextjs broke semver in the 13.0.0 -> 13.0.1 release, so even though\n    // this should be RequestCookie in all updated apps. In order to support apps\n    // using v13.0.0 still, we explicitly add the string type\n    // https://github.com/vercel/next.js/pull/41526\n    const reqCookieOrString = req.cookies.get(name) as ReturnType<NextRequest['cookies']['get']> | string | undefined;\n    if (!reqCookieOrString) {\n      return undefined;\n    }\n    return typeof reqCookieOrString === 'string' ? reqCookieOrString : reqCookieOrString.value;\n  }\n  return req.cookies[name];\n}\n\nfunction isNextRequest(val: unknown): val is NextRequest {\n  try {\n    const { headers, nextUrl, cookies } = (val || {}) as NextRequest;\n    return (\n      typeof headers?.get === 'function' &&\n      typeof nextUrl?.searchParams.get === 'function' &&\n      typeof cookies?.get === 'function'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nconst OVERRIDE_HEADERS = 'x-middleware-override-headers';\nconst MIDDLEWARE_HEADER_PREFIX = 'x-middleware-request' as string;\n\nexport const setRequestHeadersOnNextResponse = (\n  res: NextResponse | Response,\n  req: Request,\n  newHeaders: Record<string, string>,\n) => {\n  if (!res.headers.get(OVERRIDE_HEADERS)) {\n    // Emulate a user setting overrides by explicitly adding the required nextjs headers\n    // https://github.com/vercel/next.js/pull/41380\n    // @ts-expect-error\n    res.headers.set(OVERRIDE_HEADERS, [...req.headers.keys()]);\n    req.headers.forEach((val, key) => {\n      res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n    });\n  }\n\n  // Now that we have normalised res to include overrides, just append the new header\n  Object.entries(newHeaders).forEach(([key, val]) => {\n    res.headers.set(OVERRIDE_HEADERS, `${res.headers.get(OVERRIDE_HEADERS)},${key}`);\n    res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n  });\n};\n\nexport const injectSSRStateIntoObject = <O, T>(obj: O, authObject: T) => {\n  // Serializing the state on dev env is a temp workaround for the following issue:\n  // https://github.com/vercel/next.js/discussions/11209|Next.js\n  const __clerk_ssr_state = (\n    process.env.NODE_ENV !== 'production' ? JSON.parse(JSON.stringify({ ...authObject })) : { ...authObject }\n  ) as T;\n  return { ...obj, __clerk_ssr_state };\n};\n\n// Auth result will be set as both a query param & header when applicable\nexport function decorateRequest(\n  req: ClerkRequest,\n  res: Response,\n  requestState: RequestState,\n  requestData?: AuthenticateRequestOptions,\n): Response {\n  const { reason, message, status, token } = requestState;\n  // pass-through case, convert to next()\n  if (!res) {\n    res = NextResponse.next();\n  }\n\n  // redirect() case, return early\n  if (res.headers.get(nextConstants.Headers.NextRedirect)) {\n    return res;\n  }\n\n  let rewriteURL;\n\n  // next() case, convert to a rewrite\n  if (res.headers.get(nextConstants.Headers.NextResume) === '1') {\n    res.headers.delete(nextConstants.Headers.NextResume);\n    rewriteURL = new URL(req.url);\n  }\n\n  // rewrite() case, set auth result only if origin remains the same\n  const rewriteURLHeader = res.headers.get(nextConstants.Headers.NextRewrite);\n\n  if (rewriteURLHeader) {\n    const reqURL = new URL(req.url);\n    rewriteURL = new URL(rewriteURLHeader);\n\n    // if the origin has changed, return early\n    if (rewriteURL.origin !== reqURL.origin) {\n      return res;\n    }\n  }\n\n  if (rewriteURL) {\n    const clerkRequestData = encryptClerkRequestData(requestData);\n\n    setRequestHeadersOnNextResponse(res, req, {\n      [constants.Headers.AuthStatus]: status,\n      [constants.Headers.AuthToken]: token || '',\n      [constants.Headers.AuthSignature]: token ? createTokenSignature(token, requestData?.secretKey ?? SECRET_KEY) : '',\n      [constants.Headers.AuthMessage]: message || '',\n      [constants.Headers.AuthReason]: reason || '',\n      [constants.Headers.ClerkUrl]: req.clerkUrl.toString(),\n      ...(clerkRequestData ? { [constants.Headers.ClerkRequestData]: clerkRequestData } : {}),\n    });\n    res.headers.set(nextConstants.Headers.NextRewrite, rewriteURL.href);\n  }\n\n  return res;\n}\n\nexport const apiEndpointUnauthorizedNextResponse = () => {\n  return NextResponse.json(null, { status: 401, statusText: 'Unauthorized' });\n};\n\nexport const isCrossOrigin = (from: string | URL, to: string | URL) => {\n  const fromUrl = new URL(from);\n  const toUrl = new URL(to);\n  return fromUrl.origin !== toUrl.origin;\n};\n\nexport const handleMultiDomainAndProxy = (clerkRequest: ClerkRequest, opts: AuthenticateRequestOptions) => {\n  const relativeOrAbsoluteProxyUrl = handleValueOrFn(opts?.proxyUrl, clerkRequest.clerkUrl, PROXY_URL);\n\n  let proxyUrl;\n  if (!!relativeOrAbsoluteProxyUrl && !isHttpOrHttps(relativeOrAbsoluteProxyUrl)) {\n    proxyUrl = new URL(relativeOrAbsoluteProxyUrl, clerkRequest.clerkUrl).toString();\n  } else {\n    proxyUrl = relativeOrAbsoluteProxyUrl;\n  }\n\n  const isSatellite = handleValueOrFn(opts.isSatellite, new URL(clerkRequest.url), IS_SATELLITE);\n  const domain = handleValueOrFn(opts.domain, new URL(clerkRequest.url), DOMAIN);\n  const signInUrl = opts?.signInUrl || SIGN_IN_URL;\n\n  if (isSatellite && !proxyUrl && !domain) {\n    throw new Error(missingDomainAndProxy);\n  }\n\n  if (isSatellite && !isHttpOrHttps(signInUrl) && isDevelopmentFromSecretKey(opts.secretKey || SECRET_KEY)) {\n    throw new Error(missingSignInUrlInDev);\n  }\n\n  return {\n    proxyUrl,\n    isSatellite,\n    domain,\n    signInUrl,\n  };\n};\n\nexport const redirectAdapter = (url: string | URL) => {\n  return NextResponse.redirect(url, { headers: { [constants.Headers.ClerkRedirectTo]: 'true' } });\n};\n\nexport function assertKey(key: string, onError: () => never): string {\n  if (!key) {\n    onError();\n  }\n\n  return key;\n}\n\n/**\n * Compute a cryptographic signature from a session token and provided secret key. Used to validate that the token has not been modified when transferring between middleware and the Next.js origin.\n */\nfunction createTokenSignature(token: string, key: string): string {\n  return hmacSHA1(token, key).toString();\n}\n\n/**\n * Assert that the provided token generates a matching signature.\n */\nexport function assertTokenSignature(token: string, key: string, signature?: string | null) {\n  if (!signature) {\n    throw new Error(authSignatureInvalid);\n  }\n\n  const expectedSignature = createTokenSignature(token, key);\n  if (expectedSignature !== signature) {\n    throw new Error(authSignatureInvalid);\n  }\n}\n\n/**\n * Encrypt request data propagated between server requests.\n * @internal\n **/\nexport function encryptClerkRequestData(requestData?: Partial<AuthenticateRequestOptions>) {\n  if (!requestData || !Object.values(requestData).length) {\n    return;\n  }\n\n  if (requestData.secretKey && !ENCRYPTION_KEY) {\n    // TODO SDK-1833: change this to an error in the next major version of `@clerk/nextjs`\n    logger.warnOnce(\n      'Clerk: Missing `CLERK_ENCRYPTION_KEY`. Required for propagating `secretKey` middleware option. See docs: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys',\n    );\n\n    return;\n  }\n\n  return AES.encrypt(\n    JSON.stringify(requestData),\n    ENCRYPTION_KEY || assertKey(SECRET_KEY, () => errorThrower.throwMissingSecretKeyError()),\n  ).toString();\n}\n\n/**\n * Decrypt request data propagated between server requests.\n * @internal\n */\nexport function decryptClerkRequestData(\n  encryptedRequestData?: string | undefined | null,\n): Partial<AuthenticateRequestOptions> {\n  if (!encryptedRequestData) {\n    return {};\n  }\n\n  try {\n    const decryptedBytes = AES.decrypt(encryptedRequestData, ENCRYPTION_KEY || SECRET_KEY);\n    const encoded = decryptedBytes.toString(encUtf8);\n    return JSON.parse(encoded);\n  } catch (err) {\n    throw new Error(encryptionKeyInvalid);\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/buildClerkProps.ts"],"sourcesContent":["import type { Organization, Session, User } from '@clerk/backend';\nimport {\n  AuthStatus,\n  constants,\n  makeAuthObjectSerializable,\n  signedInAuthObject,\n  signedOutAuthObject,\n  stripPrivateDataFromObject,\n} from '@clerk/backend/internal';\nimport { decodeJwt } from '@clerk/backend/jwt';\n\nimport { API_URL, API_VERSION, SECRET_KEY } from './constants';\nimport type { RequestLike } from './types';\nimport { decryptClerkRequestData, getAuthKeyFromRequest, getHeader, injectSSRStateIntoObject } from './utils';\n\ntype BuildClerkPropsInitState = { user?: User | null; session?: Session | null; organization?: Organization | null };\n\n/**\n * To enable Clerk SSR support, include this object to the `props`\n * returned from `getServerSideProps`. This will automatically make the auth state available to\n * the Clerk components and hooks during SSR, the hydration phase and CSR.\n * @example\n * import { getAuth } from '@clerk/nextjs/server';\n *\n * export const getServerSideProps = ({ req }) => {\n *   const { authServerSideProps } = getAuth(req);\n *   const myData = getMyData();\n *\n *   return {\n *     props: { myData, authServerSideProps },\n *   };\n * };\n */\ntype BuildClerkProps = (req: RequestLike, authState?: BuildClerkPropsInitState) => Record<string, unknown>;\n\nexport const buildClerkProps: BuildClerkProps = (req, initState = {}) => {\n  const authStatus = getAuthKeyFromRequest(req, 'AuthStatus');\n  const authToken = getAuthKeyFromRequest(req, 'AuthToken');\n  const authMessage = getAuthKeyFromRequest(req, 'AuthMessage');\n  const authReason = getAuthKeyFromRequest(req, 'AuthReason');\n\n  const encryptedRequestData = getHeader(req, constants.Headers.ClerkRequestData);\n  const decryptedRequestData = decryptClerkRequestData(encryptedRequestData);\n\n  const options = {\n    secretKey: decryptedRequestData.secretKey || SECRET_KEY,\n    apiUrl: API_URL,\n    apiVersion: API_VERSION,\n    authStatus,\n    authMessage,\n    authReason,\n  };\n\n  let authObject;\n  if (!authStatus || authStatus !== AuthStatus.SignedIn) {\n    authObject = signedOutAuthObject(options);\n  } else {\n    const jwt = decodeJwt(authToken as string);\n\n    // @ts-expect-error - TODO @nikos: Align types\n    authObject = signedInAuthObject(options, jwt.raw.text, jwt.payload);\n  }\n\n  const sanitizedAuthObject = makeAuthObjectSerializable(stripPrivateDataFromObject({ ...authObject, ...initState }));\n  return injectSSRStateIntoObject({}, sanitizedAuthObject);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAmCO,MAAM,kBAAmC,CAAC,KAAK,YAAY,CAAC,CAAA;IACjE,MAAM,aAAa,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;IAC9C,MAAM,YAAY,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;IAC7C,MAAM,cAAc,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;IAC/C,MAAM,aAAa,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;IAE9C,MAAM,uBAAuB,CAAA,GAAA,ySAAA,CAAA,YAAA,EAAU,KAAK,kSAAA,CAAA,YAAA,CAAU,OAAA,CAAQ,gBAAgB;IAC9E,MAAM,uBAAuB,CAAA,GAAA,ySAAA,CAAA,0BAAA,EAAwB;IAErD,MAAM,UAAU;QACd,WAAW,qBAAqB,SAAA,IAAa,6SAAA,CAAA,aAAA;QAC7C,QAAQ,6SAAA,CAAA,UAAA;QACR,YAAY,6SAAA,CAAA,cAAA;QACZ;QACA;QACA;IACF;IAEA,IAAI;IACJ,IAAI,CAAC,cAAc,eAAe,kSAAA,CAAA,aAAA,CAAW,QAAA,EAAU;QACrD,aAAa,CAAA,GAAA,kSAAA,CAAA,sBAAA,EAAoB;IACnC,OAAO;QACL,MAAM,MAAM,CAAA,GAAA,6QAAA,CAAA,YAAA,EAAU;QAGtB,aAAa,CAAA,GAAA,kSAAA,CAAA,qBAAA,EAAmB,SAAS,IAAI,GAAA,CAAI,IAAA,EAAM,IAAI,OAAO;IACpE;IAEA,MAAM,sBAAsB,CAAA,GAAA,kSAAA,CAAA,6BAAA,EAA2B,CAAA,GAAA,yRAAA,CAAA,6BAAA,EAA2B;QAAE,GAAG,UAAA;QAAY,GAAG,SAAA;IAAU;IAChH,OAAO,CAAA,GAAA,ySAAA,CAAA,2BAAA,EAAyB,CAAC,GAAG;AACtC"}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/utils/logFormatter.ts"],"sourcesContent":["import type { LogEntry } from './debugLogger';\n\n// Move to shared once clerk/shared is used in clerk/nextjs\nconst maskSecretKey = (str: any) => {\n  if (!str || typeof str !== 'string') {\n    return str;\n  }\n\n  try {\n    return (str || '').replace(/^(sk_(live|test)_)(.+?)(.{3})$/, '$1*********$4');\n  } catch (e) {\n    return '';\n  }\n};\n\nexport const logFormatter = (entry: LogEntry) => {\n  return (Array.isArray(entry) ? entry : [entry])\n    .map(entry => {\n      if (typeof entry === 'string') {\n        return maskSecretKey(entry);\n      }\n\n      const masked = Object.fromEntries(Object.entries(entry).map(([k, v]) => [k, maskSecretKey(v)]));\n      return JSON.stringify(masked, null, 2);\n    })\n    .join(', ');\n};\n"],"names":["entry"],"mappings":";;;AAGA,MAAM,gBAAgB,CAAC;IACrB,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;QACnC,OAAO;IACT;IAEA,IAAI;QACF,OAAA,CAAQ,OAAO,EAAA,EAAI,OAAA,CAAQ,kCAAkC;IAC/D,EAAA,OAAS,GAAG;QACV,OAAO;IACT;AACF;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAA,CAAQ,MAAM,OAAA,CAAQ,SAAS,QAAQ;QAAC;KAAK,EAC1C,GAAA,CAAI,CAAAA;QACH,IAAI,OAAOA,WAAU,UAAU;YAC7B,OAAO,cAAcA;QACvB;QAEA,MAAM,SAAS,OAAO,WAAA,CAAY,OAAO,OAAA,CAAQA,QAAO,GAAA,CAAI,CAAC,CAAC,GAAG,EAAC,GAAM;gBAAC;gBAAG,cAAc;aAAG;QAC7F,OAAO,KAAK,SAAA,CAAU,QAAQ,MAAM;IACtC,GACC,IAAA,CAAK;AACV"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/utils/debugLogger.ts"],"sourcesContent":["// TODO: Replace with a more sophisticated logging solution\n\nimport nextPkg from 'next/package.json';\n\nimport { logFormatter } from './logFormatter';\n\nexport type Log = string | Record<string, unknown>;\nexport type LogEntry = Log | Log[];\nexport type Logger<L = Log> = {\n  commit: () => void;\n  debug: (...args: Array<L | (() => L)>) => void;\n  enable: () => void;\n};\n\nexport const createDebugLogger = (name: string, formatter: (val: LogEntry) => string) => (): Logger => {\n  const entries: LogEntry[] = [];\n  let isEnabled = false;\n\n  return {\n    enable: () => {\n      isEnabled = true;\n    },\n    debug: (...args) => {\n      if (isEnabled) {\n        entries.push(args.map(arg => (typeof arg === 'function' ? arg() : arg)));\n      }\n    },\n    commit: () => {\n      if (isEnabled) {\n        console.log(debugLogHeader(name));\n\n        /**\n         * We buffer each collected log entry so we can format them and log them all at once.\n         * Individual console.log calls are used to ensure we don't hit platform-specific log limits (Vercel and Netlify are 4kb).\n         */\n        for (const log of entries) {\n          let output = formatter(log);\n\n          output = output\n            .split('\\n')\n            .map(l => `  ${l}`)\n            .join('\\n');\n\n          // Vercel errors if the output is > 4kb, so we truncate it\n          if (process.env.VERCEL) {\n            output = truncate(output, 4096);\n          }\n\n          console.log(output);\n        }\n\n        console.log(debugLogFooter(name));\n      }\n    },\n  };\n};\n\ntype WithLogger = <L extends Logger, H extends (...args: any[]) => any>(\n  loggerFactoryOrName: string | (() => L),\n  handlerCtor: (logger: Omit<L, 'commit'>) => H,\n) => H;\n\nexport const withLogger: WithLogger = (loggerFactoryOrName, handlerCtor) => {\n  return ((...args: any) => {\n    const factory =\n      typeof loggerFactoryOrName === 'string'\n        ? createDebugLogger(loggerFactoryOrName, logFormatter)\n        : loggerFactoryOrName;\n\n    const logger = factory();\n    const handler = handlerCtor(logger as any);\n\n    try {\n      const res = handler(...args);\n      if (typeof res === 'object' && 'then' in res && typeof res.then === 'function') {\n        return res\n          .then((val: any) => {\n            logger.commit();\n            return val;\n          })\n          .catch((err: any) => {\n            logger.commit();\n            throw err;\n          });\n      }\n      // handle sync methods\n      logger.commit();\n      return res;\n    } catch (err: any) {\n      logger.commit();\n      throw err;\n    }\n  }) as ReturnType<typeof handlerCtor>;\n};\n\nfunction debugLogHeader(name: string) {\n  return `[clerk debug start: ${name}]`;\n}\n\nfunction debugLogFooter(name: string) {\n  return `[clerk debug end: ${name}] (@clerk/nextjs=${PACKAGE_VERSION},next=${nextPkg.version})`;\n}\n\n// ref: https://stackoverflow.com/questions/57769465/javascript-truncate-text-by-bytes-length\nfunction truncate(str: string, maxLength: number) {\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder('utf-8');\n\n  const encodedString = encoder.encode(str);\n  const truncatedString = encodedString.slice(0, maxLength);\n\n  // return the truncated string, removing any replacement characters that result from partially truncated characters\n  return decoder.decode(truncatedString).replace(/\\uFFFD/g, '');\n}\n"],"names":[],"mappings":";;;;;;;;;AAcO,MAAM,oBAAoB,CAAC,MAAc,YAAyC;QACvF,MAAM,UAAsB,EAAC;QAC7B,IAAI,YAAY;QAEhB,OAAO;YACL,QAAQ;gBACN,YAAY;YACd;YACA,OAAO,CAAA,GAAI;gBACT,IAAI,WAAW;oBACb,QAAQ,IAAA,CAAK,KAAK,GAAA,CAAI,CAAA,MAAQ,OAAO,QAAQ,aAAa,QAAQ;gBACpE;YACF;YACA,QAAQ;gBACN,IAAI,WAAW;oBACb,QAAQ,GAAA,CAAI,eAAe;oBAM3B,KAAA,MAAW,OAAO,QAAS;wBACzB,IAAI,SAAS,UAAU;wBAEvB,SAAS,OACN,KAAA,CAAM,MACN,GAAA,CAAI,CAAA,IAAK,CAAA,EAAA,EAAK,EAAC,CAAE,EACjB,IAAA,CAAK;wBAGR,IAAI,QAAQ,GAAA,CAAI,MAAA,EAAQ;4BACtB,SAAS,SAAS,QAAQ;wBAC5B;wBAEA,QAAQ,GAAA,CAAI;oBACd;oBAEA,QAAQ,GAAA,CAAI,eAAe;gBAC7B;YACF;QACF;IACF;AAOO,MAAM,aAAyB,CAAC,qBAAqB;IAC1D,OAAQ,CAAA,GAAI;QACV,MAAM,UACJ,OAAO,wBAAwB,WAC3B,kBAAkB,qBAAqB,+SAAA,CAAA,eAAY,IACnD;QAEN,MAAM,SAAS;QACf,MAAM,UAAU,YAAY;QAE5B,IAAI;YACF,MAAM,MAAM,WAAW;YACvB,IAAI,OAAO,QAAQ,YAAY,UAAU,OAAO,OAAO,IAAI,IAAA,KAAS,YAAY;gBAC9E,OAAO,IACJ,IAAA,CAAK,CAAC;oBACL,OAAO,MAAA;oBACP,OAAO;gBACT,GACC,KAAA,CAAM,CAAC;oBACN,OAAO,MAAA;oBACP,MAAM;gBACR;YACJ;YAEA,OAAO,MAAA;YACP,OAAO;QACT,EAAA,OAAS,KAAU;YACjB,OAAO,MAAA;YACP,MAAM;QACR;IACF;AACF;AAEA,SAAS,eAAe,IAAA;IACtB,OAAO,CAAA,oBAAA,EAAuB,KAAI,CAAA,CAAA;AACpC;AAEA,SAAS,eAAe,IAAA;IACtB,OAAO,CAAA,kBAAA,EAAqB,KAAI,iBAAA,EAAoB,QAAe,MAAA,EAAS,4MAAA,CAAA,UAAA,CAAQ,OAAO,CAAA,CAAA,CAAA;AAC7F;AAGA,SAAS,SAAS,GAAA,EAAa,SAAA;IAC7B,MAAM,UAAU,IAAI;IACpB,MAAM,UAAU,IAAI,YAAY;IAEhC,MAAM,gBAAgB,QAAQ,MAAA,CAAO;IACrC,MAAM,kBAAkB,cAAc,KAAA,CAAM,GAAG;IAG/C,OAAO,QAAQ,MAAA,CAAO,iBAAiB,OAAA,CAAQ,WAAW;AAC5D"}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/createGetAuth.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport { AuthStatus, constants, signedInAuthObject, signedOutAuthObject } from '@clerk/backend/internal';\nimport { decodeJwt } from '@clerk/backend/jwt';\n\nimport { withLogger } from '../utils/debugLogger';\nimport { API_URL, API_VERSION, SECRET_KEY } from './constants';\nimport { getAuthAuthHeaderMissing } from './errors';\nimport type { RequestLike } from './types';\nimport { assertTokenSignature, decryptClerkRequestData, getAuthKeyFromRequest, getCookie, getHeader } from './utils';\n\nexport const createGetAuth = ({\n  noAuthStatusMessage,\n  debugLoggerName,\n}: {\n  debugLoggerName: string;\n  noAuthStatusMessage: string;\n}) =>\n  withLogger(debugLoggerName, logger => {\n    return (req: RequestLike, opts?: { secretKey?: string }): AuthObject => {\n      if (getHeader(req, constants.Headers.EnableDebug) === 'true') {\n        logger.enable();\n      }\n\n      // When the auth status is set, we trust that the middleware has already run\n      // Then, we don't have to re-verify the JWT here,\n      // we can just strip out the claims manually.\n      const authToken = getAuthKeyFromRequest(req, 'AuthToken');\n      const authSignature = getAuthKeyFromRequest(req, 'AuthSignature');\n      const authMessage = getAuthKeyFromRequest(req, 'AuthMessage');\n      const authReason = getAuthKeyFromRequest(req, 'AuthReason');\n      const authStatus = getAuthKeyFromRequest(req, 'AuthStatus') as AuthStatus;\n      logger.debug('Headers debug', { authStatus, authMessage, authReason });\n\n      if (!authStatus) {\n        throw new Error(noAuthStatusMessage);\n      }\n\n      const encryptedRequestData = getHeader(req, constants.Headers.ClerkRequestData);\n      const decryptedRequestData = decryptClerkRequestData(encryptedRequestData);\n\n      const options = {\n        authStatus,\n        apiUrl: API_URL,\n        apiVersion: API_VERSION,\n        authMessage,\n        secretKey: opts?.secretKey || decryptedRequestData.secretKey || SECRET_KEY,\n        authReason,\n      };\n\n      logger.debug('Options debug', options);\n\n      if (authStatus === AuthStatus.SignedIn) {\n        assertTokenSignature(authToken as string, options.secretKey, authSignature);\n\n        const jwt = decodeJwt(authToken as string);\n\n        logger.debug('JWT debug', jwt.raw.text);\n\n        // @ts-expect-error - TODO @nikos: Align types\n        return signedInAuthObject(options, jwt.raw.text, jwt.payload);\n      }\n\n      return signedOutAuthObject(options);\n    };\n  });\n\nexport const getAuth = createGetAuth({\n  debugLoggerName: 'getAuth()',\n  noAuthStatusMessage: getAuthAuthHeaderMissing(),\n});\n\nexport const parseJwt = (req: RequestLike) => {\n  const cookieToken = getCookie(req, constants.Cookies.Session);\n  const headerToken = getHeader(req, 'authorization')?.replace('Bearer ', '');\n  return decodeJwt(cookieToken || headerToken || '');\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAUO,MAAM,gBAAgB,CAAC,EAC5B,mBAAA,EACA,eAAA,EACF,GAIE,CAAA,GAAA,8SAAA,CAAA,aAAA,EAAW,iBAAiB,CAAA;QAC1B,OAAO,CAAC,KAAkB;YACxB,IAAI,CAAA,GAAA,ySAAA,CAAA,YAAA,EAAU,KAAK,kSAAA,CAAA,YAAA,CAAU,OAAA,CAAQ,WAAW,MAAM,QAAQ;gBAC5D,OAAO,MAAA;YACT;YAKA,MAAM,YAAY,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;YAC7C,MAAM,gBAAgB,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;YACjD,MAAM,cAAc,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;YAC/C,MAAM,aAAa,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;YAC9C,MAAM,aAAa,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,KAAK;YAC9C,OAAO,KAAA,CAAM,iBAAiB;gBAAE;gBAAY;gBAAa;YAAW;YAEpE,IAAI,CAAC,YAAY;gBACf,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,uBAAuB,CAAA,GAAA,ySAAA,CAAA,YAAA,EAAU,KAAK,kSAAA,CAAA,YAAA,CAAU,OAAA,CAAQ,gBAAgB;YAC9E,MAAM,uBAAuB,CAAA,GAAA,ySAAA,CAAA,0BAAA,EAAwB;YAErD,MAAM,UAAU;gBACd;gBACA,QAAQ,6SAAA,CAAA,UAAA;gBACR,YAAY,6SAAA,CAAA,cAAA;gBACZ;gBACA,WAAA,CAAW,QAAA,OAAA,KAAA,IAAA,KAAM,SAAA,KAAa,qBAAqB,SAAA,IAAa,6SAAA,CAAA,aAAA;gBAChE;YACF;YAEA,OAAO,KAAA,CAAM,iBAAiB;YAE9B,IAAI,eAAe,kSAAA,CAAA,aAAA,CAAW,QAAA,EAAU;gBACtC,CAAA,GAAA,ySAAA,CAAA,uBAAA,EAAqB,WAAqB,QAAQ,SAAA,EAAW;gBAE7D,MAAM,MAAM,CAAA,GAAA,6QAAA,CAAA,YAAA,EAAU;gBAEtB,OAAO,KAAA,CAAM,aAAa,IAAI,GAAA,CAAI,IAAI;gBAGtC,OAAO,CAAA,GAAA,kSAAA,CAAA,qBAAA,EAAmB,SAAS,IAAI,GAAA,CAAI,IAAA,EAAM,IAAI,OAAO;YAC9D;YAEA,OAAO,CAAA,GAAA,kSAAA,CAAA,sBAAA,EAAoB;QAC7B;IACF;AAEK,MAAM,UAAU,cAAc;IACnC,iBAAiB;IACjB,qBAAqB,CAAA,GAAA,0SAAA,CAAA,2BAAA;AACvB;AAEO,MAAM,WAAW,CAAC;IAvEzB,IAAA;IAwEE,MAAM,cAAc,CAAA,GAAA,ySAAA,CAAA,YAAA,EAAU,KAAK,kSAAA,CAAA,YAAA,CAAU,OAAA,CAAQ,OAAO;IAC5D,MAAM,cAAA,CAAc,KAAA,CAAA,GAAA,ySAAA,CAAA,YAAA,EAAU,KAAK,gBAAe,KAA9B,OAAA,KAAA,IAAA,GAAiC,OAAA,CAAQ,WAAW;IACxE,OAAO,CAAA,GAAA,6QAAA,CAAA,YAAA,EAAU,eAAe,eAAe;AACjD"}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/nextFetcher.ts"],"sourcesContent":["type Fetcher = typeof globalThis.fetch;\n\n/**\n * Based on nextjs internal implementation https://github.com/vercel/next.js/blob/6185444e0a944a82e7719ac37dad8becfed86acd/packages/next/src/server/lib/patch-fetch.ts#L23\n */\ntype NextFetcher = Fetcher & {\n  readonly __nextPatched: true;\n  readonly __nextGetStaticStore: () => { getStore: () => StaticGenerationAsyncStorage | undefined };\n};\n\n/**\n * Full type can be found https://github.com/vercel/next.js/blob/6185444e0a944a82e7719ac37dad8becfed86acd/packages/next/src/client/components/static-generation-async-storage.external.ts#L4\n */\ninterface StaticGenerationAsyncStorage {\n  readonly pagePath?: string;\n}\n\nfunction isNextFetcher(fetch: Fetcher | NextFetcher): fetch is NextFetcher {\n  return '__nextPatched' in fetch && fetch.__nextPatched === true;\n}\n\nexport { isNextFetcher };\n"],"names":[],"mappings":";;;AAiBA,SAAS,cAAc,KAAA;IACrB,OAAO,mBAAmB,SAAS,MAAM,aAAA,KAAkB;AAC7D"}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/protect.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport type { RedirectFun, SignedInAuthObject } from '@clerk/backend/internal';\nimport { constants } from '@clerk/backend/internal';\nimport type {\n  CheckAuthorizationParamsWithCustomPermissions,\n  CheckAuthorizationWithCustomPermissions,\n} from '@clerk/types';\n\nimport { constants as nextConstants } from '../constants';\nimport { isNextFetcher } from './nextFetcher';\n\ntype AuthProtectOptions = { unauthorizedUrl?: string; unauthenticatedUrl?: string };\n\n/**\n * Throws a Nextjs notFound error if user is not authenticated or authorized.\n */\nexport interface AuthProtect {\n  (params?: CheckAuthorizationParamsWithCustomPermissions, options?: AuthProtectOptions): SignedInAuthObject;\n\n  (\n    params?: (has: CheckAuthorizationWithCustomPermissions) => boolean,\n    options?: AuthProtectOptions,\n  ): SignedInAuthObject;\n\n  (options?: AuthProtectOptions): SignedInAuthObject;\n}\n\nexport const createProtect = (opts: {\n  request: Request;\n  authObject: AuthObject;\n  /**\n   * middleware and pages throw a notFound error if signed out\n   * but the middleware needs to throw an error it can catch\n   * use this callback to customise the behavior\n   */\n  notFound: () => never;\n  /**\n   * see {@link notFound} above\n   */\n  redirect: (url: string) => void;\n  /**\n   * protect() in middleware redirects to signInUrl if signed out\n   * protect() in pages throws a notFound error if signed out\n   * use this callback to customise the behavior\n   */\n  redirectToSignIn: RedirectFun<unknown>;\n}): AuthProtect => {\n  const { redirectToSignIn, authObject, redirect, notFound, request } = opts;\n\n  return ((...args: any[]) => {\n    const optionValuesAsParam = args[0]?.unauthenticatedUrl || args[0]?.unauthorizedUrl;\n    const paramsOrFunction = optionValuesAsParam\n      ? undefined\n      : (args[0] as\n          | CheckAuthorizationParamsWithCustomPermissions\n          | ((has: CheckAuthorizationWithCustomPermissions) => boolean));\n    const unauthenticatedUrl = (args[0]?.unauthenticatedUrl || args[1]?.unauthenticatedUrl) as string | undefined;\n    const unauthorizedUrl = (args[0]?.unauthorizedUrl || args[1]?.unauthorizedUrl) as string | undefined;\n\n    const handleUnauthenticated = () => {\n      if (unauthenticatedUrl) {\n        return redirect(unauthenticatedUrl);\n      }\n      if (isPageRequest(request)) {\n        // TODO: Handle runtime values. What happens if runtime values are set in middleware and in ClerkProvider as well?\n        return redirectToSignIn();\n      }\n      return notFound();\n    };\n\n    const handleUnauthorized = () => {\n      if (unauthorizedUrl) {\n        return redirect(unauthorizedUrl);\n      }\n      return notFound();\n    };\n\n    /**\n     * User is not authenticated\n     */\n    if (!authObject.userId) {\n      return handleUnauthenticated();\n    }\n\n    /**\n     * User is authenticated\n     */\n    if (!paramsOrFunction) {\n      return authObject;\n    }\n\n    /**\n     * if a function is passed and returns false then throw not found\n     */\n    if (typeof paramsOrFunction === 'function') {\n      if (paramsOrFunction(authObject.has)) {\n        return authObject;\n      }\n      return handleUnauthorized();\n    }\n\n    /**\n     * Checking if user is authorized when permission or role is passed\n     */\n    if (authObject.has(paramsOrFunction)) {\n      return authObject;\n    }\n\n    return handleUnauthorized();\n  }) as AuthProtect;\n};\n\nconst isServerActionRequest = (req: Request) => {\n  return (\n    !!req.headers.get(nextConstants.Headers.NextUrl) &&\n    (req.headers.get(constants.Headers.Accept)?.includes('text/x-component') ||\n      req.headers.get(constants.Headers.ContentType)?.includes('multipart/form-data') ||\n      !!req.headers.get(nextConstants.Headers.NextAction))\n  );\n};\n\nconst isPageRequest = (req: Request): boolean => {\n  return (\n    req.headers.get(constants.Headers.SecFetchDest) === 'document' ||\n    req.headers.get(constants.Headers.SecFetchDest) === 'iframe' ||\n    req.headers.get(constants.Headers.Accept)?.includes('text/html') ||\n    isAppRouterInternalNavigation(req) ||\n    isPagesRouterInternalNavigation(req)\n  );\n};\n\nconst isAppRouterInternalNavigation = (req: Request) =>\n  (!!req.headers.get(nextConstants.Headers.NextUrl) && !isServerActionRequest(req)) || isPagePathAvailable();\n\nconst isPagePathAvailable = () => {\n  const __fetch = globalThis.fetch;\n  return Boolean(isNextFetcher(__fetch) ? __fetch.__nextGetStaticStore().getStore()?.pagePath : false);\n};\n\nconst isPagesRouterInternalNavigation = (req: Request) => !!req.headers.get(nextConstants.Headers.NextjsData);\n\n// /**\n//  * In case we want to handle router handlers and server actions differently in the future\n//  */\n// const isApiRouteRequest = (req: Request) => {\n//   return !isPageRequest(req) && !isServerActionRequest(req);\n// };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/server/utils.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\n\nexport const isPrerenderingBailout = (e: unknown) => {\n  if (!(e instanceof Error) || !('message' in e)) {\n    return false;\n  }\n\n  const { message } = e;\n\n  const lowerCaseInput = message.toLowerCase();\n  const dynamicServerUsage = lowerCaseInput.includes('dynamic server usage');\n  const bailOutPrerendering = lowerCaseInput.includes('this page needs to bail out of prerendering');\n\n  // note: new error message syntax introduced in next@14.1.1-canary.21\n  // but we still want to support older versions.\n  // https://github.com/vercel/next.js/pull/61332 (dynamic-rendering.ts:153)\n  const routeRegex = /Route .*? needs to bail out of prerendering at this point because it used .*?./;\n\n  return routeRegex.test(message) || dynamicServerUsage || bailOutPrerendering;\n};\n\nexport const buildRequestLike = () => {\n  try {\n    // Dynamically import next/headers, otherwise Next12 apps will break\n    // because next/headers was introduced in next@13\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { headers } = require('next/headers');\n    return new NextRequest('https://placeholder.com', { headers: headers() });\n  } catch (e: any) {\n    // rethrow the error when react throws a prerendering bailout\n    // https://nextjs.org/docs/messages/ppr-caught-error\n    if (e && isPrerenderingBailout(e)) {\n      throw e;\n    }\n\n    throw new Error(\n      `Clerk: auth() and currentUser() are only supported in App Router (/app directory).\\nIf you're using /pages, try getAuth() instead.\\nOriginal error: ${e}`,\n    );\n  }\n};\n\n// Original source: https://github.com/vercel/next.js/blob/canary/packages/next/src/server/app-render/get-script-nonce-from-header.tsx\nexport function getScriptNonceFromHeader(cspHeaderValue: string): string | undefined {\n  const directives = cspHeaderValue\n    // Directives are split by ';'.\n    .split(';')\n    .map(directive => directive.trim());\n\n  // First try to find the directive for the 'script-src', otherwise try to\n  // fallback to the 'default-src'.\n  const directive =\n    directives.find(dir => dir.startsWith('script-src')) || directives.find(dir => dir.startsWith('default-src'));\n\n  // If no directive could be found, then we're done.\n  if (!directive) {\n    return;\n  }\n\n  // Extract the nonce from the directive\n  const nonce = directive\n    .split(' ')\n    // Remove the 'strict-src'/'default-src' string, this can't be the nonce.\n    .slice(1)\n    .map(source => source.trim())\n    // Find the first source with the 'nonce-' prefix.\n    .find(source => source.startsWith(\"'nonce-\") && source.length > 8 && source.endsWith(\"'\"))\n    // Grab the nonce by trimming the 'nonce-' prefix.\n    ?.slice(7, -1);\n\n  // If we could't find the nonce, then we're done.\n  if (!nonce) {\n    return;\n  }\n\n  // Don't accept the nonce value if it contains HTML escape characters.\n  // Technically, the spec requires a base64'd value, but this is just an\n  // extra layer.\n  if (/[&><\\u2028\\u2029]/g.test(nonce)) {\n    throw new Error(\n      'Nonce value from Content-Security-Policy contained invalid HTML escape characters, which is disallowed for security reasons. Make sure that your nonce value does not contain the following characters: `<`, `>`, `&`',\n    );\n  }\n\n  return nonce;\n}\n"],"names":["directive"],"mappings":";;;;;;;;AAEO,MAAM,wBAAwB,CAAC;IACpC,IAAI,CAAA,CAAE,aAAa,KAAA,KAAU,CAAA,CAAE,aAAa,CAAA,GAAI;QAC9C,OAAO;IACT;IAEA,MAAM,EAAE,OAAA,EAAQ,GAAI;IAEpB,MAAM,iBAAiB,QAAQ,WAAA;IAC/B,MAAM,qBAAqB,eAAe,QAAA,CAAS;IACnD,MAAM,sBAAsB,eAAe,QAAA,CAAS;IAKpD,MAAM,aAAa;IAEnB,OAAO,WAAW,IAAA,CAAK,YAAY,sBAAsB;AAC3D;AAEO,MAAM,mBAAmB;IAC9B,IAAI;QAIF,MAAM,EAAE,OAAA,EAAQ;QAChB,OAAO,IAAI,mOAAA,CAAA,cAAA,CAAY,2BAA2B;YAAE,SAAS;QAAU;IACzE,EAAA,OAAS,GAAQ;QAGf,IAAI,KAAK,sBAAsB,IAAI;YACjC,MAAM;QACR;QAEA,MAAM,IAAI,MACR,CAAA;;gBAAA,EAAuJ,EAAC,CAAA;IAE5J;AACF;AAGO,SAAS,yBAAyB,cAAA;IA1CzC,IAAA;IA2CE,MAAM,aAAa,eAEhB,KAAA,CAAM,KACN,GAAA,CAAI,CAAAA,aAAaA,WAAU,IAAA;IAI9B,MAAM,YACJ,WAAW,IAAA,CAAK,CAAA,MAAO,IAAI,UAAA,CAAW,kBAAkB,WAAW,IAAA,CAAK,CAAA,MAAO,IAAI,UAAA,CAAW;IAGhG,IAAI,CAAC,WAAW;QACd;IACF;IAGA,MAAM,QAAA,CAAQ,KAAA,UACX,KAAA,CAAM,KAEN,KAAA,CAAM,GACN,GAAA,CAAI,CAAA,SAAU,OAAO,IAAA,IAErB,IAAA,CAAK,CAAA,SAAU,OAAO,UAAA,CAAW,cAAc,OAAO,MAAA,GAAS,KAAK,OAAO,QAAA,CAAS,KAAI,KAN7E,OAAA,KAAA,IAAA,GAQV,KAAA,CAAM,GAAG,CAAA;IAGb,IAAI,CAAC,OAAO;QACV;IACF;IAKA,IAAI,qBAAqB,IAAA,CAAK,QAAQ;QACpC,MAAM,IAAI,MACR;IAEJ;IAEA,OAAO;AACT"}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/server/auth.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport type { RedirectFun } from '@clerk/backend/internal';\nimport { constants, createClerkRequest, createRedirect } from '@clerk/backend/internal';\nimport { notFound, redirect } from 'next/navigation';\n\nimport { buildClerkProps } from '../../server/buildClerkProps';\nimport { PUBLISHABLE_KEY, SIGN_IN_URL, SIGN_UP_URL } from '../../server/constants';\nimport { createGetAuth } from '../../server/createGetAuth';\nimport { authAuthHeaderMissing } from '../../server/errors';\nimport type { AuthProtect } from '../../server/protect';\nimport { createProtect } from '../../server/protect';\nimport { decryptClerkRequestData, getAuthKeyFromRequest, getHeader } from '../../server/utils';\nimport { buildRequestLike } from './utils';\n\ntype Auth = AuthObject & { protect: AuthProtect; redirectToSignIn: RedirectFun<ReturnType<typeof redirect>> };\n\nexport const auth = (): Auth => {\n  require('server-only');\n\n  const request = buildRequestLike();\n  const authObject = createGetAuth({\n    debugLoggerName: 'auth()',\n    noAuthStatusMessage: authAuthHeaderMissing(),\n  })(request);\n\n  const clerkUrl = getAuthKeyFromRequest(request, 'ClerkUrl');\n\n  const redirectToSignIn: RedirectFun<never> = (opts = {}) => {\n    const clerkRequest = createClerkRequest(request);\n    const devBrowserToken =\n      clerkRequest.clerkUrl.searchParams.get(constants.QueryParameters.DevBrowser) ||\n      clerkRequest.cookies.get(constants.Cookies.DevBrowser);\n\n    const encryptedRequestData = getHeader(request, constants.Headers.ClerkRequestData);\n    const decryptedRequestData = decryptClerkRequestData(encryptedRequestData);\n\n    return createRedirect({\n      redirectAdapter: redirect,\n      devBrowserToken: devBrowserToken,\n      baseUrl: clerkRequest.clerkUrl.toString(),\n      publishableKey: decryptedRequestData.publishableKey || PUBLISHABLE_KEY,\n      signInUrl: decryptedRequestData.signInUrl || SIGN_IN_URL,\n      signUpUrl: decryptedRequestData.signUpUrl || SIGN_UP_URL,\n    }).redirectToSignIn({\n      returnBackUrl: opts.returnBackUrl === null ? '' : opts.returnBackUrl || clerkUrl?.toString(),\n    });\n  };\n\n  const protect = createProtect({ request, authObject, redirectToSignIn, notFound, redirect });\n\n  return Object.assign(authObject, { protect, redirectToSignIn });\n};\n\nexport const initialState = () => {\n  return buildClerkProps(buildRequestLike());\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAgBO,MAAM,OAAO;;IAGlB,MAAM,UAAU,CAAA,GAAA,0TAAA,CAAA,mBAAA;IAChB,MAAM,aAAa,CAAA,GAAA,iTAAA,CAAA,gBAAA,EAAc;QAC/B,iBAAiB;QACjB,qBAAqB,CAAA,GAAA,0SAAA,CAAA,wBAAA;IACvB,GAAG;IAEH,MAAM,WAAW,CAAA,GAAA,ySAAA,CAAA,wBAAA,EAAsB,SAAS;IAEhD,MAAM,mBAAuC,CAAC,OAAO,CAAC,CAAA;QACpD,MAAM,eAAe,CAAA,GAAA,kSAAA,CAAA,qBAAA,EAAmB;QACxC,MAAM,kBACJ,aAAa,QAAA,CAAS,YAAA,CAAa,GAAA,CAAI,kSAAA,CAAA,YAAA,CAAU,eAAA,CAAgB,UAAU,KAC3E,aAAa,OAAA,CAAQ,GAAA,CAAI,kSAAA,CAAA,YAAA,CAAU,OAAA,CAAQ,UAAU;QAEvD,MAAM,uBAAuB,CAAA,GAAA,ySAAA,CAAA,YAAA,EAAU,SAAS,kSAAA,CAAA,YAAA,CAAU,OAAA,CAAQ,gBAAgB;QAClF,MAAM,uBAAuB,CAAA,GAAA,ySAAA,CAAA,0BAAA,EAAwB;QAErD,OAAO,CAAA,GAAA,yRAAA,CAAA,iBAAA,EAAe;YACpB,iBAAiB,0RAAA,CAAA,WAAA;YACjB;YACA,SAAS,aAAa,QAAA,CAAS,QAAA;YAC/B,gBAAgB,qBAAqB,cAAA,IAAkB,6SAAA,CAAA,kBAAA;YACvD,WAAW,qBAAqB,SAAA,IAAa,6SAAA,CAAA,cAAA;YAC7C,WAAW,qBAAqB,SAAA,IAAa,6SAAA,CAAA,cAAA;QAC/C,GAAG,gBAAA,CAAiB;YAClB,eAAe,KAAK,aAAA,KAAkB,OAAO,KAAK,KAAK,aAAA,IAAA,CAAiB,YAAA,OAAA,KAAA,IAAA,SAAU,QAAA,EAAA;QACpF;IACF;IAEA,MAAM,UAAU,CAAA,GAAA,2SAAA,CAAA,gBAAA,EAAc;QAAE;QAAS;QAAY;QAAkB,UAAA,0RAAA,CAAA,WAAA;QAAU,UAAA,0RAAA,CAAA,WAAA;IAAS;IAE1F,OAAO,OAAO,MAAA,CAAO,YAAY;QAAE;QAAS;IAAiB;AAC/D;AAEO,MAAM,eAAe;IAC1B,OAAO,CAAA,GAAA,mTAAA,CAAA,kBAAA,EAAgB,CAAA,GAAA,0TAAA,CAAA,mBAAA;AACzB"}},
    {"offset": {"line": 966, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 971, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/server/ClerkProvider.tsx"],"sourcesContent":["import type { InitialState, Without } from '@clerk/types';\nimport { headers } from 'next/headers';\nimport React from 'react';\n\nimport type { NextClerkProviderProps } from '../../types';\nimport { mergeNextClerkPropsWithEnv } from '../../utils/mergeNextClerkPropsWithEnv';\nimport { ClientClerkProvider } from '../client/ClerkProvider';\nimport { initialState } from './auth';\nimport { getScriptNonceFromHeader } from './utils';\n\nexport function ClerkProvider(props: Without<NextClerkProviderProps, '__unstable_invokeMiddlewareOnAuthStateChange'>) {\n  const { children, ...rest } = props;\n  const state = initialState()?.__clerk_ssr_state as InitialState;\n  const cspHeader = headers().get('Content-Security-Policy');\n\n  return (\n    <ClientClerkProvider\n      {...mergeNextClerkPropsWithEnv(rest)}\n      nonce={getScriptNonceFromHeader(cspHeader || '')}\n      initialState={state}\n    >\n      {children}\n    </ClientClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAUO,SAAS,cAAc,KAAA;IAV9B,IAAA;IAWE,MAAM,EAAE,QAAA,EAAU,GAAG,MAAK,GAAI;IAC9B,MAAM,QAAA,CAAQ,KAAA,CAAA,GAAA,yTAAA,CAAA,eAAA,GAAa,KAAb,OAAA,KAAA,IAAA,GAAgB,iBAAA;IAC9B,MAAM,YAAY,CAAA,GAAA,oOAAA,CAAA,UAAA,IAAU,GAAA,CAAI;IAEhC,OACE,aAAA,GAAA,oTAAA,CAAA,UAAA,CAAA,aAAA,CAAC,kUAAA,CAAA,sBAAA,EAAA;QACE,GAAG,CAAA,GAAA,6TAAA,CAAA,6BAAA,EAA2B,KAAI;QACnC,OAAO,CAAA,GAAA,0TAAA,CAAA,2BAAA,EAAyB,aAAa;QAC7C,cAAc;IAAA,GAEb;AAGP"}},
    {"offset": {"line": 1000, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1005, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/server/controlComponents.tsx"],"sourcesContent":["import type { ProtectProps } from '@clerk/clerk-react';\nimport React from 'react';\n\nimport { auth } from './auth';\n\nexport function SignedIn(props: React.PropsWithChildren): React.JSX.Element | null {\n  const { children } = props;\n  const { userId } = auth();\n  return userId ? <>{children}</> : null;\n}\n\nexport function SignedOut(props: React.PropsWithChildren): React.JSX.Element | null {\n  const { children } = props;\n  const { userId } = auth();\n  return userId ? null : <>{children}</>;\n}\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport function Protect(props: ProtectProps): React.JSX.Element | null {\n  const { children, fallback, ...restAuthorizedParams } = props;\n  const { has, userId } = auth();\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = fallback ? <>{fallback}</> : null;\n\n  const authorized = <>{children}</>;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAKO,SAAS,SAAS,KAAA;IACvB,MAAM,EAAE,QAAA,EAAS,GAAI;IACrB,MAAM,EAAE,MAAA,EAAO,GAAI,CAAA,GAAA,yTAAA,CAAA,OAAA;IACnB,OAAO,SAAS,aAAA,GAAA,oTAAA,CAAA,UAAA,CAAA,aAAA,CAAA,oTAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAG,YAAe;AACpC;AAEO,SAAS,UAAU,KAAA;IACxB,MAAM,EAAE,QAAA,EAAS,GAAI;IACrB,MAAM,EAAE,MAAA,EAAO,GAAI,CAAA,GAAA,yTAAA,CAAA,OAAA;IACnB,OAAO,SAAS,OAAO,aAAA,GAAA,oTAAA,CAAA,UAAA,CAAA,aAAA,CAAA,oTAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAG;AAC5B;AAcO,SAAS,QAAQ,KAAA;IACtB,MAAM,EAAE,QAAA,EAAU,QAAA,EAAU,GAAG,sBAAqB,GAAI;IACxD,MAAM,EAAE,GAAA,EAAK,MAAA,EAAO,GAAI,CAAA,GAAA,yTAAA,CAAA,OAAA;IAKxB,MAAM,eAAe,WAAW,aAAA,GAAA,oTAAA,CAAA,UAAA,CAAA,aAAA,CAAA,oTAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAG,YAAe;IAElD,MAAM,aAAa,aAAA,GAAA,oTAAA,CAAA,UAAA,CAAA,aAAA,CAAA,oTAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAG;IAEtB,IAAI,CAAC,QAAQ;QACX,OAAO;IACT;IAKA,IAAI,OAAO,qBAAqB,SAAA,KAAc,YAAY;QACxD,IAAI,qBAAqB,SAAA,CAAU,MAAM;YACvC,OAAO;QACT;QACA,OAAO;IACT;IAEA,IAAI,qBAAqB,IAAA,IAAQ,qBAAqB,UAAA,EAAY;QAChE,IAAI,IAAI,uBAAuB;YAC7B,OAAO;QACT;QACA,OAAO;IACT;IAMA,OAAO;AACT"}},
    {"offset": {"line": 1049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1083, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/index.ts"],"sourcesContent":["/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  AuthenticateWithRedirectCallback,\n  ClerkLoaded,\n  ClerkLoading,\n  RedirectToCreateOrganization,\n  RedirectToOrganizationProfile,\n  RedirectToSignIn,\n  RedirectToSignUp,\n  RedirectToUserProfile,\n} from './client-boundary/controlComponents';\n\n/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  CreateOrganization,\n  OrganizationList,\n  OrganizationProfile,\n  OrganizationSwitcher,\n  SignIn,\n  SignInButton,\n  SignInWithMetamaskButton,\n  SignOutButton,\n  SignUp,\n  SignUpButton,\n  UserButton,\n  UserProfile,\n  GoogleOneTap,\n} from './client-boundary/uiComponents';\n\n/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  useAuth,\n  useClerk,\n  useEmailLink,\n  useOrganization,\n  useOrganizationList,\n  useSession,\n  useSessionList,\n  useSignIn,\n  useSignUp,\n  useUser,\n} from './client-boundary/hooks';\n\n/**\n * Conditionally export components that exhibit different behavior\n * when used in /app vs /pages.\n * We defined the runtime and the type values explicitly,\n * because TS will not recognize the subpath import unless the HOST\n * application sets moduleResolution to 'NodeNext'.\n */\n// @ts-ignore\nimport * as ComponentsModule from '#components';\n\nimport type { ServerComponentsServerModuleTypes } from './components.server';\n\nexport const ClerkProvider = ComponentsModule.ClerkProvider as ServerComponentsServerModuleTypes['ClerkProvider'];\nexport const SignedIn = ComponentsModule.SignedIn as ServerComponentsServerModuleTypes['SignedIn'];\nexport const SignedOut = ComponentsModule.SignedOut as ServerComponentsServerModuleTypes['SignedOut'];\nexport const Protect = ComponentsModule.Protect as ServerComponentsServerModuleTypes['Protect'];\n"],"names":[],"mappings":";;;;;;;;;;;;AAgEO,MAAM,gBAAgB,+TAAiB,aAAA;AACvC,MAAM,WAAW,+TAAiB,QAAA;AAClC,MAAM,YAAY,+TAAiB,SAAA;AACnC,MAAM,UAAU,+TAAiB,OAAA"}},
    {"offset": {"line": 1101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1106, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreateOrganization = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreateOrganization() from the server but CreateOrganization is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"CreateOrganization\",\n);\nexport const GoogleOneTap = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleOneTap() from the server but GoogleOneTap is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"GoogleOneTap\",\n);\nexport const OrganizationList = registerClientReference(\n    function() { throw new Error(\"Attempted to call OrganizationList() from the server but OrganizationList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"OrganizationList\",\n);\nexport const OrganizationProfile = registerClientReference(\n    function() { throw new Error(\"Attempted to call OrganizationProfile() from the server but OrganizationProfile is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"OrganizationProfile\",\n);\nexport const OrganizationSwitcher = registerClientReference(\n    function() { throw new Error(\"Attempted to call OrganizationSwitcher() from the server but OrganizationSwitcher is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"OrganizationSwitcher\",\n);\nexport const SignIn = registerClientReference(\n    function() { throw new Error(\"Attempted to call SignIn() from the server but SignIn is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"SignIn\",\n);\nexport const SignInButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SignInButton() from the server but SignInButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"SignInButton\",\n);\nexport const SignInWithMetamaskButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SignInWithMetamaskButton() from the server but SignInWithMetamaskButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"SignInWithMetamaskButton\",\n);\nexport const SignOutButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SignOutButton() from the server but SignOutButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"SignOutButton\",\n);\nexport const SignUp = registerClientReference(\n    function() { throw new Error(\"Attempted to call SignUp() from the server but SignUp is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"SignUp\",\n);\nexport const SignUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SignUpButton() from the server but SignUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"SignUpButton\",\n);\nexport const UserButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call UserButton() from the server but UserButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"UserButton\",\n);\nexport const UserProfile = registerClientReference(\n    function() { throw new Error(\"Attempted to call UserProfile() from the server but UserProfile is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/client-boundary/uiComponents.js\",\n    \"UserProfile\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AACO,MAAM,qBAAqB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,kKACA;AAEG,MAAM,eAAe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kKACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,kKACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,kKACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,kKACA;AAEG,MAAM,SAAS,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,kKACA;AAEG,MAAM,eAAe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kKACA;AAEG,MAAM,2BAA2B,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,kKACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,kKACA;AAEG,MAAM,SAAS,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,kKACA;AAEG,MAAM,eAAe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kKACA;AAEG,MAAM,aAAa,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,kKACA;AAEG,MAAM,cAAc,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,kKACA"}},
    {"offset": {"line": 1163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1168, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/uiComponents.tsx"],"sourcesContent":["'use client';\n\nimport {\n  CreateOrganization as BaseCreateOrganization,\n  OrganizationProfile as BaseOrganizationProfile,\n  SignIn as BaseSignIn,\n  SignUp as BaseSignUp,\n  UserProfile as BaseUserProfile,\n} from '@clerk/clerk-react';\nimport type {\n  CreateOrganizationProps,\n  OrganizationProfileProps,\n  SignInProps,\n  SignUpProps,\n  UserProfileProps,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { useEnforceCorrectRoutingProps } from './hooks/useEnforceRoutingProps';\n\nexport {\n  OrganizationList,\n  OrganizationSwitcher,\n  SignInButton,\n  SignInWithMetamaskButton,\n  SignOutButton,\n  SignUpButton,\n  UserButton,\n  GoogleOneTap,\n} from '@clerk/clerk-react';\n\n// The assignment of UserProfile with BaseUserProfile props is used\n// to support the CustomPage functionality (eg UserProfile.Page)\n// Also the `typeof BaseUserProfile` is used to resolve the following error:\n// \"The inferred type of 'UserProfile' cannot be named without a reference to ...\"\nexport const UserProfile: typeof BaseUserProfile = Object.assign(\n  (props: UserProfileProps) => {\n    return <BaseUserProfile {...useEnforceCorrectRoutingProps('UserProfile', props)} />;\n  },\n  { ...BaseUserProfile },\n);\n\nexport const CreateOrganization = (props: CreateOrganizationProps) => {\n  return <BaseCreateOrganization {...useEnforceCorrectRoutingProps('CreateOrganization', props)} />;\n};\n\n// The assignment of OrganizationProfile with BaseOrganizationProfile props is used\n// to support the CustomPage functionality (eg OrganizationProfile.Page)\n// Also the `typeof BaseOrganizationProfile` is used to resolved the following error:\n// \"The inferred type of 'OrganizationProfile' cannot be named without a reference to ...\"\nexport const OrganizationProfile: typeof BaseOrganizationProfile = Object.assign(\n  (props: OrganizationProfileProps) => {\n    return <BaseOrganizationProfile {...useEnforceCorrectRoutingProps('OrganizationProfile', props)} />;\n  },\n  { ...BaseOrganizationProfile },\n);\n\nexport const SignIn = (props: SignInProps) => {\n  return <BaseSignIn {...useEnforceCorrectRoutingProps('SignIn', props, false)} />;\n};\n\nexport const SignUp = (props: SignUpProps) => {\n  return <BaseSignUp {...useEnforceCorrectRoutingProps('SignUp', props, false)} />;\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1178, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/dist/esm/app-router/server-actions.js [app-client] (ecmascript, action)"],"sourcesContent":["\"use server\";\nimport { cookies } from \"next/headers\";\nasync function invalidateCacheAction() {\n  return cookies().delete(`__clerk_invalidate_cache_cookie_${Date.now()}`);\n}\nexport {\n  invalidateCacheAction\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAEA,eAAe;IACb,OAAO,CAAA,GAAA,oOAAA,CAAA,UAAO,AAAD,IAAI,MAAM,CAAC,CAAC,gCAAgC,EAAE,KAAK,GAAG,GAAG,CAAC;AACzE"}},
    {"offset": {"line": 1198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1203, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/apps/nextjs/.next-internal/server/app/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n  '58a866a068cee3347f8c272ecc528effaa67a7e1': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['invalidateCacheAction'])(...args)),\n});"],"names":[],"mappings":"AAAA,2BAA2B;IACzB,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,kOAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,wBAAwB,KAAK;AACxJ"}},
    {"offset": {"line": 1206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}