{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/components.client.ts"],"sourcesContent":["export { ClerkProvider } from './client-boundary/ClerkProvider';\nexport { SignedIn, SignedOut, Protect } from './client-boundary/controlComponents';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/hooks/useSafeLayoutEffect.tsx"],"sourcesContent":["import React from 'react';\n\n// TODO: Import from shared once [JS-118] is done\nexport const useSafeLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n"],"names":[],"mappings":";;;;;;AAGO,MAAM,sBAAsB,OAAO,WAAW,cAAc,kQAAA,CAAA,UAAA,CAAM,eAAA,GAAkB,kQAAA,CAAA,UAAA,CAAM,SAAA"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/NextOptionsContext.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { NextClerkProviderProps } from '../types';\n\ntype ClerkNextContextValue = Partial<Omit<NextClerkProviderProps, 'children'>>;\n\nconst ClerkNextOptionsCtx = React.createContext<{ value: ClerkNextContextValue } | undefined>(undefined);\nClerkNextOptionsCtx.displayName = 'ClerkNextOptionsCtx';\n\nconst useClerkNextOptions = () => {\n  const ctx = React.useContext(ClerkNextOptionsCtx) as { value: ClerkNextContextValue };\n  return ctx.value;\n};\n\nconst ClerkNextOptionsProvider = (\n  props: React.PropsWithChildren<{ options: ClerkNextContextValue }>,\n): React.JSX.Element => {\n  const { children, options } = props;\n  return <ClerkNextOptionsCtx.Provider value={{ value: options }}>{children}</ClerkNextOptionsCtx.Provider>;\n};\n\nexport { ClerkNextOptionsProvider, useClerkNextOptions };\n"],"names":[],"mappings":";;;;;;;AAMA,MAAM,sBAAsB,kQAAA,CAAA,UAAA,CAAM,aAAA,CAA4D,KAAA;AAC9F,oBAAoB,WAAA,GAAc;AAElC,MAAM,sBAAsB;IAC1B,MAAM,MAAM,kQAAA,CAAA,UAAA,CAAM,UAAA,CAAW;IAC7B,OAAO,IAAI,KAAA;AACb;AAEA,MAAM,2BAA2B,CAC/B;IAEA,MAAM,EAAE,QAAA,EAAU,OAAA,EAAQ,GAAI;IAC9B,OAAO,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,oBAAoB,QAAA,EAApB;QAA6B,OAAO;YAAE,OAAO;QAAQ;IAAA,GAAI;AACnE"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/utils/clerk-js-script.tsx"],"sourcesContent":["import { useClerk } from '@clerk/clerk-react';\nimport { buildClerkJsScriptAttributes, clerkJsScriptUrl } from '@clerk/clerk-react/internal';\nimport NextScript from 'next/script';\nimport React from 'react';\n\nimport { useClerkNextOptions } from '../client-boundary/NextOptionsContext';\n\ntype ClerkJSScriptProps = {\n  router: 'app' | 'pages';\n};\n\nfunction ClerkJSScript(props: ClerkJSScriptProps) {\n  const { publishableKey, clerkJSUrl, clerkJSVersion, clerkJSVariant, nonce } = useClerkNextOptions();\n  const { domain, proxyUrl } = useClerk();\n  const options = {\n    domain,\n    proxyUrl,\n    publishableKey: publishableKey!,\n    clerkJSUrl,\n    clerkJSVersion,\n    clerkJSVariant,\n    nonce,\n  };\n  const scriptUrl = clerkJsScriptUrl(options);\n\n  /**\n   * Notes:\n   * `next/script` in 13.x.x when used with App Router will fail to pass any of our `data-*` attributes, resulting in errors\n   * Nextjs App Router will automatically move inline scripts inside `<head/>`\n   * Using the `nextjs/script` for App Router with the `beforeInteractive` strategy will throw an error because our custom script will be mounted outside the `html` tag.\n   */\n  const Script = props.router === 'app' ? 'script' : NextScript;\n\n  return (\n    <Script\n      src={scriptUrl}\n      data-clerk-js-script\n      async\n      // `nextjs/script` will add defer by default and does not get removed when we async is true\n      defer={props.router === 'pages' ? false : undefined}\n      crossOrigin='anonymous'\n      strategy={props.router === 'pages' ? 'beforeInteractive' : undefined}\n      {...buildClerkJsScriptAttributes(options)}\n    />\n  );\n}\n\nexport { ClerkJSScript };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAWA,SAAS,cAAc,KAAA;IACrB,MAAM,EAAE,cAAA,EAAgB,UAAA,EAAY,cAAA,EAAgB,cAAA,EAAgB,KAAA,EAAM,GAAI,CAAA,GAAA,qUAAA,CAAA,sBAAA;IAC9E,MAAM,EAAE,MAAA,EAAQ,QAAA,EAAS,GAAI,CAAA,GAAA,gRAAA,CAAA,WAAA;IAC7B,MAAM,UAAU;QACd;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IACA,MAAM,YAAY,CAAA,GAAA,mRAAA,CAAA,mBAAA,EAAiB;IAQnC,MAAM,SAAS,MAAM,MAAA,KAAW,QAAQ,WAAW,sOAAA,CAAA,UAAA;IAEnD,OACE,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,QAAA;QACC,KAAK;QACL,wBAAoB;QACpB,OAAK;QAEL,OAAO,MAAM,MAAA,KAAW,UAAU,QAAQ,KAAA;QAC1C,aAAY;QACZ,UAAU,MAAM,MAAA,KAAW,UAAU,sBAAsB,KAAA;QAC1D,GAAG,CAAA,GAAA,mRAAA,CAAA,+BAAA,EAA6B,QAAO;IAAA;AAG9C"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/server/constants.ts"],"sourcesContent":["import { apiUrlFromPublishableKey } from '@clerk/shared/apiUrlFromPublishableKey';\nimport { isTruthy } from '@clerk/shared/underscore';\n\nexport const CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || '';\nexport const CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS_URL || '';\nexport const API_VERSION = process.env.CLERK_API_VERSION || 'v1';\nexport const SECRET_KEY = process.env.CLERK_SECRET_KEY || '';\nexport const PUBLISHABLE_KEY = process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '';\nexport const ENCRYPTION_KEY = process.env.CLERK_ENCRYPTION_KEY || '';\nexport const API_URL = process.env.CLERK_API_URL || apiUrlFromPublishableKey(PUBLISHABLE_KEY);\nexport const DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || '';\nexport const PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || '';\nexport const IS_SATELLITE = isTruthy(process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE) || false;\nexport const SIGN_IN_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '';\nexport const SIGN_UP_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '';\nexport const SDK_METADATA = {\n  name: PACKAGE_NAME,\n  version: PACKAGE_VERSION,\n  environment: process.env.NODE_ENV,\n};\n\nexport const TELEMETRY_DISABLED = isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DISABLED);\nexport const TELEMETRY_DEBUG = isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DEBUG);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGO,MAAM,mBAAmB,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,4BAAA,IAAgC;AACrE,MAAM,eAAe,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,wBAAA,IAA4B;AAC7D,MAAM,cAAc,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,iBAAA,IAAqB;AACrD,MAAM,aAAa,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,gBAAA,IAAoB;AACnD,MAAM,kBAAkB,kGAAiD;AACzE,MAAM,iBAAiB,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,oBAAA,IAAwB;AAC3D,MAAM,UAAU,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,aAAA,IAAiB,CAAA,GAAA,mRAAA,CAAA,2BAAA,EAAyB;AACtE,MAAM,SAAS,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,wBAAA,IAA4B;AACvD,MAAM,YAAY,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,2BAAA,IAA+B;AAC7D,MAAM,eAAe,CAAA,GAAA,mRAAA,CAAA,WAAA,EAAS,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,8BAA8B,KAAK;AAC7E,MAAM,cAAc,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,cAAc,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,eAAe;IAC1B,MAAM;IACN,SAAS;IACT,WAAA;AACF;AAEO,MAAM,qBAAqB,CAAA,GAAA,mRAAA,CAAA,WAAA,EAAS,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,oCAAoC;AACpF,MAAM,kBAAkB,CAAA,GAAA,mRAAA,CAAA,WAAA,EAAS,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,iCAAiC"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/utils/mergeNextClerkPropsWithEnv.ts"],"sourcesContent":["import { isTruthy } from '@clerk/shared/underscore';\n\nimport { SDK_METADATA } from '../server/constants';\nimport type { NextClerkProviderProps } from '../types';\n\n// @ts-ignore - https://github.com/microsoft/TypeScript/issues/47663\nexport const mergeNextClerkPropsWithEnv = (props: Omit<NextClerkProviderProps, 'children'>): any => {\n  return {\n    ...props,\n    publishableKey: props.publishableKey || process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '',\n    clerkJSUrl: props.clerkJSUrl || process.env.NEXT_PUBLIC_CLERK_JS_URL,\n    clerkJSVersion: props.clerkJSVersion || process.env.NEXT_PUBLIC_CLERK_JS_VERSION,\n    proxyUrl: props.proxyUrl || process.env.NEXT_PUBLIC_CLERK_PROXY_URL || '',\n    domain: props.domain || process.env.NEXT_PUBLIC_CLERK_DOMAIN || '',\n    isSatellite: props.isSatellite || isTruthy(process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE),\n    signInUrl: props.signInUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '',\n    signUpUrl: props.signUpUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '',\n    signInForceRedirectUrl:\n      props.signInForceRedirectUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL || '',\n    signUpForceRedirectUrl:\n      props.signUpForceRedirectUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL || '',\n    signInFallbackRedirectUrl:\n      props.signInFallbackRedirectUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL || '',\n    signUpFallbackRedirectUrl:\n      props.signUpFallbackRedirectUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL || '',\n    afterSignInUrl: props.afterSignInUrl || process.env.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL || '',\n    afterSignUpUrl: props.afterSignUpUrl || process.env.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL || '',\n    telemetry: props.telemetry ?? {\n      disabled: isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DISABLED),\n      debug: isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DEBUG),\n    },\n    sdkMetadata: SDK_METADATA,\n  };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAMO,MAAM,6BAA6B,CAAC;IAN3C,IAAA;IAOE,OAAO;QACL,GAAG,KAAA;QACH,gBAAgB,MAAM,cAAA,sGAAmE;QACzF,YAAY,MAAM,UAAA,IAAc,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,wBAAA;QAC5C,gBAAgB,MAAM,cAAA,IAAkB,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,4BAAA;QACpD,UAAU,MAAM,QAAA,IAAY,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,2BAAA,IAA+B;QACvE,QAAQ,MAAM,MAAA,IAAU,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,wBAAA,IAA4B;QAChE,aAAa,MAAM,WAAA,IAAe,CAAA,GAAA,mRAAA,CAAA,WAAA,EAAS,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,8BAA8B;QACrF,WAAW,MAAM,SAAA,IAAa,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,6BAAA,IAAiC;QAC3E,WAAW,MAAM,SAAA,IAAa,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,6BAAA,IAAiC;QAC3E,wBACE,MAAM,sBAAA,IAA0B,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,4CAAA,IAAgD;QAC9F,wBACE,MAAM,sBAAA,IAA0B,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,4CAAA,IAAgD;QAC9F,2BACE,MAAM,yBAAA,IAA6B,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,+CAAA,IAAmD;QACpG,2BACE,MAAM,yBAAA,IAA6B,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,+CAAA,IAAmD;QACpG,gBAAgB,MAAM,cAAA,IAAkB,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,mCAAA,IAAuC;QAC3F,gBAAgB,MAAM,cAAA,IAAkB,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,mCAAA,IAAuC;QAC3F,WAAA,CAAW,KAAA,MAAM,SAAA,KAAN,OAAA,KAAmB;YAC5B,UAAU,CAAA,GAAA,mRAAA,CAAA,WAAA,EAAS,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,oCAAoC;YACnE,OAAO,CAAA,GAAA,mRAAA,CAAA,WAAA,EAAS,qQAAA,CAAA,UAAA,CAAQ,GAAA,CAAI,iCAAiC;QAC/D;QACA,aAAa,gTAAA,CAAA,eAAA;IACf;AACF"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/client/useInternalNavFun.ts"],"sourcesContent":["import type { AppRouterInstance } from 'next/dist/shared/lib/app-router-context.shared-runtime';\nimport { usePathname } from 'next/navigation';\nimport { useCallback, useEffect, useTransition } from 'react';\n\nimport type { NextClerkProviderProps } from '../../types';\n\ndeclare global {\n  interface Window {\n    __clerk_internal_navigations: Record<\n      string,\n      {\n        fun: NonNullable<NextClerkProviderProps['routerPush'] | NextClerkProviderProps['routerReplace']>;\n        promisesBuffer: Array<() => void> | undefined;\n      }\n    >;\n  }\n}\n\nconst getClerkNavigationObject = (name: string) => {\n  window.__clerk_internal_navigations ??= {};\n  // @ts-ignore\n  window.__clerk_internal_navigations[name] ??= {};\n  return window.__clerk_internal_navigations[name];\n};\n\nexport const useInternalNavFun = (props: {\n  windowNav: typeof window.history.pushState | typeof window.history.replaceState | undefined;\n  routerNav: AppRouterInstance['push'] | AppRouterInstance['replace'];\n  name: string;\n}) => {\n  const { windowNav, routerNav, name } = props;\n  const pathname = usePathname();\n  const [isPending, startTransition] = useTransition();\n\n  if (windowNav) {\n    getClerkNavigationObject(name).fun = (to, opts) => {\n      return new Promise<void>(res => {\n        // We need to use window to store the reference to the buffer,\n        // as ClerkProvider might be unmounted and remounted during navigations\n        // If we use a ref, it will be reset when ClerkProvider is unmounted\n        getClerkNavigationObject(name).promisesBuffer ??= [];\n        getClerkNavigationObject(name).promisesBuffer?.push(res);\n        startTransition(() => {\n          // If the navigation is internal, we should use the history API to navigate\n          // as this is the way to perform a shallow navigation in Next.js App Router\n          // without unmounting/remounting the page or fetching data from the server.\n          if (opts?.__internal_metadata?.navigationType === 'internal') {\n            // In 14.1.0, useSearchParams becomes reactive to shallow updates,\n            // but only if passing `null` as the history state.\n            // Older versions need to maintain the history state for push/replace to work,\n            // without affecting how the Next router works.\n            const state = ((window as any).next?.version ?? '') < '14.1.0' ? history.state : null;\n            windowNav(state, '', to);\n          } else {\n            // If the navigation is external (usually when navigating away from the component but still within the app),\n            // we should use the Next.js router to navigate as it will handle updating the URL and also\n            // fetching the new page if necessary.\n            routerNav(to);\n          }\n        });\n      });\n    };\n  }\n\n  const flushPromises = () => {\n    getClerkNavigationObject(name).promisesBuffer?.forEach(resolve => resolve());\n    getClerkNavigationObject(name).promisesBuffer = [];\n  };\n\n  // Flush any pending promises on mount/unmount\n  useEffect(() => {\n    flushPromises();\n    return flushPromises;\n  }, []);\n\n  // Handle flushing the promise buffer when a navigation happens\n  useEffect(() => {\n    if (!isPending) {\n      flushPromises();\n    }\n  }, [pathname, isPending]);\n\n  return useCallback((to: string) => {\n    return getClerkNavigationObject(name).fun(to);\n    // We are not expecting name to change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n"],"names":["_a","_b","_c"],"mappings":";;;;;;;;AAkBA,MAAM,2BAA2B,CAAC;IAlBlC,IAAA,IAAA,IAAA;IAmBE,CAAA,KAAA,OAAO,4BAAA,KAAP,OAAA,KAAA,OAAO,4BAAA,GAAiC,CAAC;IAEzC,CAAA,KAAA,CAAA,KAAA,OAAO,4BAAA,CAAA,CAAP,KAAA,KAAA,OAAA,KAAA,EAAA,CAAA,KAAA,GAA8C,CAAC;IAC/C,OAAO,OAAO,4BAAA,CAA6B,KAAI;AACjD;AAEO,MAAM,oBAAoB,CAAC;IAKhC,MAAM,EAAE,SAAA,EAAW,SAAA,EAAW,IAAA,EAAK,GAAI;IACvC,MAAM,WAAW,CAAA,GAAA,0OAAA,CAAA,cAAA;IACjB,MAAM,CAAC,WAAW,gBAAe,GAAI,CAAA,GAAA,kQAAA,CAAA,gBAAA;IAErC,IAAI,WAAW;QACb,yBAAyB,MAAM,GAAA,GAAM,CAAC,IAAI;YACxC,OAAO,IAAI,QAAc,CAAA;gBApC/B,IAAA,IAAA,IAAA;gBAwCQ,CAAA,KAAA,CAAA,KAAA,yBAAyB,KAAI,EAAE,cAAA,KAA/B,OAAA,KAAA,GAA+B,cAAA,GAAmB,EAAC;gBACnD,CAAA,KAAA,yBAAyB,MAAM,cAAA,KAA/B,OAAA,KAAA,IAAA,GAA+C,IAAA,CAAK;gBACpD,gBAAgB;oBA1CxB,IAAAA,KAAAC,KAAAC;oBA8CU,IAAA,CAAA,CAAIF,MAAA,QAAA,OAAA,KAAA,IAAA,KAAM,mBAAA,KAAN,OAAA,KAAA,IAAAA,IAA2B,cAAA,MAAmB,YAAY;wBAK5D,MAAM,QAAA,CAAA,CAAUE,MAAAA,CAAAD,MAAA,OAAe,IAAA,KAAf,OAAA,KAAA,IAAAA,IAAqB,OAAA,KAArB,OAAAC,MAAgC,EAAA,IAAM,WAAW,QAAQ,KAAA,GAAQ;wBACjF,UAAU,OAAO,IAAI;oBACvB,OAAO;wBAIL,UAAU;oBACZ;gBACF;YACF;QACF;IACF;IAEA,MAAM,gBAAgB;QAhExB,IAAA;QAiEI,CAAA,KAAA,yBAAyB,MAAM,cAAA,KAA/B,OAAA,KAAA,IAAA,GAA+C,OAAA,CAAQ,CAAA,UAAW;QAClE,yBAAyB,MAAM,cAAA,GAAiB,EAAC;IACnD;IAGA,CAAA,GAAA,kQAAA,CAAA,YAAA,EAAU;QACR;QACA,OAAO;IACT,GAAG,EAAE;IAGL,CAAA,GAAA,kQAAA,CAAA,YAAA,EAAU;QACR,IAAI,CAAC,WAAW;YACd;QACF;IACF,GAAG;QAAC;QAAU;KAAU;IAExB,OAAO,CAAA,GAAA,kQAAA,CAAA,cAAA,EAAY,CAAC;QAClB,OAAO,yBAAyB,MAAM,GAAA,CAAI;IAG5C,GAAG,EAAE;AACP"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/client/useAwaitablePush.ts"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\n\nimport { useInternalNavFun } from './useInternalNavFun';\n\n/**\n * Creates an \"awaitable\" navigation function that will do its best effort to wait for Next.js to finish its route transition.\n * This is accomplished by wrapping the call to `router.push` in `startTransition()`, which should rely on React to coordinate the pending state. We key off of\n * `isPending` to flush the stored promises and ensure the navigates \"resolve\".\n */\nexport const useAwaitablePush = () => {\n  const router = useRouter();\n\n  return useInternalNavFun({\n    windowNav: typeof window !== 'undefined' ? window.history.pushState.bind(window.history) : undefined,\n    routerNav: router.push.bind(router),\n    name: 'push',\n  });\n};\n"],"names":[],"mappings":";;;;;;;;;AAWO,MAAM,mBAAmB;IAC9B,MAAM,SAAS,CAAA,GAAA,0OAAA,CAAA,YAAA;IAEf,OAAO,CAAA,GAAA,yUAAA,CAAA,oBAAA,EAAkB;QACvB,WAAW,OAAO,WAAW,cAAc,OAAO,OAAA,CAAQ,SAAA,CAAU,IAAA,CAAK,OAAO,OAAO,IAAI,KAAA;QAC3F,WAAW,OAAO,IAAA,CAAK,IAAA,CAAK;QAC5B,MAAM;IACR;AACF"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/client/useAwaitableReplace.ts"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\n\nimport { useInternalNavFun } from './useInternalNavFun';\n\n/**\n * Creates an \"awaitable\" navigation function that will do its best effort to wait for Next.js to finish its route transition.\n * This is accomplished by wrapping the call to `router.replace` in `startTransition()`, which should rely on React to coordinate the pending state. We key off of\n * `isPending` to flush the stored promises and ensure the navigates \"resolve\".\n */\nexport const useAwaitableReplace = () => {\n  const router = useRouter();\n\n  return useInternalNavFun({\n    windowNav: typeof window !== 'undefined' ? window.history.replaceState.bind(window.history) : undefined,\n    routerNav: router.replace.bind(router),\n    name: 'replace',\n  });\n};\n"],"names":[],"mappings":";;;;;;;;;AAWO,MAAM,sBAAsB;IACjC,MAAM,SAAS,CAAA,GAAA,0OAAA,CAAA,YAAA;IAEf,OAAO,CAAA,GAAA,yUAAA,CAAA,oBAAA,EAAkB;QACvB,WAAW,OAAO,WAAW,cAAc,OAAO,OAAA,CAAQ,YAAA,CAAa,IAAA,CAAK,OAAO,OAAO,IAAI,KAAA;QAC9F,WAAW,OAAO,OAAA,CAAQ,IAAA,CAAK;QAC/B,MAAM;IACR;AACF"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/app-router/client/ClerkProvider.tsx"],"sourcesContent":["'use client';\nimport { ClerkProvider as ReactClerkProvider } from '@clerk/clerk-react';\nimport { useRouter } from 'next/navigation';\nimport React, { useEffect, useTransition } from 'react';\n\nimport { useSafeLayoutEffect } from '../../client-boundary/hooks/useSafeLayoutEffect';\nimport { ClerkNextOptionsProvider } from '../../client-boundary/NextOptionsContext';\nimport type { NextClerkProviderProps } from '../../types';\nimport { ClerkJSScript } from '../../utils/clerk-js-script';\nimport { mergeNextClerkPropsWithEnv } from '../../utils/mergeNextClerkPropsWithEnv';\nimport { invalidateCacheAction } from '../server-actions';\nimport { useAwaitablePush } from './useAwaitablePush';\nimport { useAwaitableReplace } from './useAwaitableReplace';\n\ndeclare global {\n  export interface Window {\n    __clerk_nav_await: Array<(value: void) => void>;\n    __clerk_nav: (to: string) => Promise<void>;\n    __clerk_internal_invalidateCachePromise: () => void | undefined;\n  }\n}\n\nexport const ClientClerkProvider = (props: NextClerkProviderProps) => {\n  const { __unstable_invokeMiddlewareOnAuthStateChange = true, children } = props;\n  const router = useRouter();\n  const push = useAwaitablePush();\n  const replace = useAwaitableReplace();\n  const [isPending, startTransition] = useTransition();\n\n  useEffect(() => {\n    if (!isPending) {\n      window.__clerk_internal_invalidateCachePromise?.();\n    }\n  }, [isPending]);\n\n  useSafeLayoutEffect(() => {\n    window.__unstable__onBeforeSetActive = () => {\n      /**\n       * We need to invalidate the cache in case the user is navigating to a page that\n       * was previously cached using the auth state that was active at the time.\n       *\n       *  We also need to await for the invalidation to happen before we navigate,\n       * otherwise the navigation will use the cached page.\n       *\n       * For example, if we did not invalidate the flow, the following scenario would be broken:\n       * - The middleware is configured in such a way that it redirects you back to the same page if a certain condition is true (eg, you need to pick an org)\n       * - The user has a <Link href=/> component in the page\n       * - The UB is mounted with afterSignOutUrl=/\n       * - The user clicks the Link. A nav to / happens, a 307 to the current page is returned so a navigation does not take place. The / navigation is now cached as a 307 to the current page\n       * - The user clicks sign out\n       * - We call router.refresh()\n       * - We navigate to / but its cached and instead, we 'redirect' to the current page\n       *\n       *  For more information on cache invalidation, see:\n       * https://nextjs.org/docs/app/building-your-application/caching#invalidation-1\n       */\n      return new Promise(res => {\n        window.__clerk_internal_invalidateCachePromise = res;\n        startTransition(() => {\n          //@ts-expect-error next exists on window\n          if (window.next?.version && typeof window.next.version === 'string' && window.next.version.startsWith('13')) {\n            router.refresh();\n          } else {\n            void invalidateCacheAction();\n          }\n        });\n      });\n    };\n\n    window.__unstable__onAfterSetActive = () => {\n      if (__unstable_invokeMiddlewareOnAuthStateChange) {\n        return router.refresh();\n      }\n    };\n  }, []);\n\n  const mergedProps = mergeNextClerkPropsWithEnv({\n    ...props,\n    routerPush: push,\n    routerReplace: replace,\n  });\n\n  return (\n    <ClerkNextOptionsProvider options={mergedProps}>\n      <ReactClerkProvider {...mergedProps}>\n        <ClerkJSScript router='app' />\n        {children}\n      </ReactClerkProvider>\n    </ClerkNextOptionsProvider>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,MAAM,sBAAsB,CAAC;IAClC,MAAM,EAAE,+CAA+C,IAAA,EAAM,QAAA,EAAS,GAAI;IAC1E,MAAM,SAAS,CAAA,GAAA,0OAAA,CAAA,YAAA;IACf,MAAM,OAAO,CAAA,GAAA,wUAAA,CAAA,mBAAA;IACb,MAAM,UAAU,CAAA,GAAA,2UAAA,CAAA,sBAAA;IAChB,MAAM,CAAC,WAAW,gBAAe,GAAI,CAAA,GAAA,kQAAA,CAAA,gBAAA;IAErC,CAAA,GAAA,kQAAA,CAAA,YAAA,EAAU;QA7BZ,IAAA;QA8BI,IAAI,CAAC,WAAW;YACd,CAAA,KAAA,OAAO,uCAAA,KAAP,OAAA,KAAA,IAAA,GAAA,IAAA,CAAA;QACF;IACF,GAAG;QAAC;KAAU;IAEd,CAAA,GAAA,+UAAA,CAAA,sBAAA,EAAoB;QAClB,OAAO,6BAAA,GAAgC;YAoBrC,OAAO,IAAI,QAAQ,CAAA;gBACjB,OAAO,uCAAA,GAA0C;gBACjD,gBAAgB;oBA1DxB,IAAA;oBA4DU,IAAA,CAAA,CAAI,KAAA,OAAO,IAAA,KAAP,OAAA,KAAA,IAAA,GAAa,OAAA,KAAW,OAAO,OAAO,IAAA,CAAK,OAAA,KAAY,YAAY,OAAO,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,OAAO;wBAC3G,OAAO,OAAA;oBACT,OAAO;wBACL,KAAK,CAAA,GAAA,+TAAA,CAAA,wBAAA;oBACP;gBACF;YACF;QACF;QAEA,OAAO,4BAAA,GAA+B;YACpC,IAAI,8CAA8C;gBAChD,OAAO,OAAO,OAAA;YAChB;QACF;IACF,GAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,gUAAA,CAAA,6BAAA,EAA2B;QAC7C,GAAG,KAAA;QACH,YAAY;QACZ,eAAe;IACjB;IAEA,OACE,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,qUAAA,CAAA,2BAAA,EAAA;QAAyB,SAAS;IAAA,GACjC,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,uSAAA,CAAA,gBAAA,EAAA;QAAoB,GAAG,WAAA;IAAA,GACtB,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,2TAAA,CAAA,gBAAA,EAAA;QAAc,QAAO;IAAA,IACrB;AAIT"}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/utils/invalidateNextRouterCache.ts"],"sourcesContent":["// interface FetchDataOutput {\n//   dataHref: string;\n//   json: Record<string, any> | null;\n//   response: Response;\n//   text: string;\n//   cacheKey: string;\n// }\n//\n// interface NextDataCache {\n//   [asPath: string]: Promise<FetchDataOutput>;\n// }\n\n/**\n * A placeholder for the actual next types.\n * The types above are not exported from the next package currently,\n * we only include them here for documentation purposes.\n * see: https://github.com/vercel/next.js/blob/018208fb15c9b969e173684668cea89588f4c536/packages/next/src/shared/lib/router/router.ts#L655\n */\ntype NextDataCache = any;\n\n/**\n * Only for /pages router\n *\n * Next currently prefetches the page of every visible Link on the page.\n * For every prefetch request, the middleware runs and the response is cached in\n * window.next.router.sdc or window.next.router.sdc\n *\n * Imagine a scenario with a /protected page requiring the user to be signed in using middleware.\n * If we don't invalidate the cache, we end up in the following redirect flow:\n * home -> /protected -> middleware redirects to /sign-in -> perform sign-in\n *            -> try to navigate to /protected but the cached 307 response is used\n *                   -> redirect to /sign-in instead -> withRedirectToHome -> home\n * When the auth state changes and the middleware runs again, the client-side router\n * does not automatically invalidate the cache so the browser follows the cached response\n *\n * This helper invalidates both known caches help prevent the scenario described above.\n */\nexport const invalidateNextRouterCache = () => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const invalidate = (cache: NextDataCache) => {\n    // deleting the keys without nuking the cache by reassigning the variable to an empty object,\n    // in case next holds a reference to it\n    Object.keys(cache).forEach(key => {\n      delete cache[key];\n    });\n  };\n\n  try {\n    invalidate((window as any).next.router.sdc);\n    invalidate((window as any).next.router.sbc);\n  } catch (e) {\n    return;\n  }\n};\n"],"names":[],"mappings":";;;AAqCO,MAAM,4BAA4B;IACvC,IAAI,OAAO,WAAW,aAAa;QACjC;IACF;IAEA,MAAM,aAAa,CAAC;QAGlB,OAAO,IAAA,CAAK,OAAO,OAAA,CAAQ,CAAA;YACzB,OAAO,KAAA,CAAM,IAAG;QAClB;IACF;IAEA,IAAI;QACF,WAAY,OAAe,IAAA,CAAK,MAAA,CAAO,GAAG;QAC1C,WAAY,OAAe,IAAA,CAAK,MAAA,CAAO,GAAG;IAC5C,EAAA,OAAS,GAAG;QACV;IACF;AACF"}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/pages/ClerkProvider.tsx"],"sourcesContent":["import { ClerkProvider as ReactClerkProvider } from '@clerk/clerk-react';\n// Override Clerk React error thrower to show that errors come from @clerk/nextjs\nimport { setClerkJsLoadingErrorPackageName, setErrorThrowerOptions } from '@clerk/clerk-react/internal';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport { useSafeLayoutEffect } from '../client-boundary/hooks/useSafeLayoutEffect';\nimport { ClerkNextOptionsProvider } from '../client-boundary/NextOptionsContext';\nimport type { NextClerkProviderProps } from '../types';\nimport { ClerkJSScript } from '../utils/clerk-js-script';\nimport { invalidateNextRouterCache } from '../utils/invalidateNextRouterCache';\nimport { mergeNextClerkPropsWithEnv } from '../utils/mergeNextClerkPropsWithEnv';\n\nsetErrorThrowerOptions({ packageName: PACKAGE_NAME });\nsetClerkJsLoadingErrorPackageName(PACKAGE_NAME);\n\nexport function ClerkProvider({ children, ...props }: NextClerkProviderProps): JSX.Element {\n  const { __unstable_invokeMiddlewareOnAuthStateChange = true } = props;\n  const { push, replace } = useRouter();\n  ReactClerkProvider.displayName = 'ReactClerkProvider';\n\n  useSafeLayoutEffect(() => {\n    window.__unstable__onBeforeSetActive = invalidateNextRouterCache;\n  }, []);\n\n  useSafeLayoutEffect(() => {\n    window.__unstable__onAfterSetActive = () => {\n      // Re-run the middleware every time there auth state changes.\n      // This enables complete control from a centralised place (NextJS middleware),\n      // as we will invoke it every time the client-side auth state changes, eg: signing-out, switching orgs, etc.\\\n      if (__unstable_invokeMiddlewareOnAuthStateChange) {\n        void push(window.location.href);\n      }\n    };\n  }, []);\n\n  const navigate = (to: string) => push(to);\n  const replaceNavigate = (to: string) => replace(to);\n  const mergedProps = mergeNextClerkPropsWithEnv({ ...props, routerPush: navigate, routerReplace: replaceNavigate });\n  // ClerkProvider automatically injects __clerk_ssr_state\n  // getAuth returns a user-facing authServerSideProps that hides __clerk_ssr_state\n  // @ts-expect-error initialState is hidden from the types as it's a private prop\n  const initialState = props.authServerSideProps?.__clerk_ssr_state || props.__clerk_ssr_state;\n\n  return (\n    <ClerkNextOptionsProvider options={mergedProps}>\n      <ReactClerkProvider\n        {...mergedProps}\n        initialState={initialState}\n      >\n        <ClerkJSScript router='pages' />\n        {children}\n      </ReactClerkProvider>\n    </ClerkNextOptionsProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAaA,CAAA,GAAA,mTAAA,CAAA,yBAAA,EAAuB;IAAE,aAAa;AAAa;AACnD,CAAA,GAAA,mRAAA,CAAA,oCAAA,EAAkC;AAE3B,SAAS,cAAc,EAAE,QAAA,EAAU,GAAG,OAAM;IAhBnD,IAAA;IAiBE,MAAM,EAAE,+CAA+C,IAAA,EAAK,GAAI;IAChE,MAAM,EAAE,IAAA,EAAM,OAAA,EAAQ,GAAI,CAAA,GAAA,sOAAA,CAAA,YAAA;IAC1B,uSAAA,CAAA,gBAAA,CAAmB,WAAA,GAAc;IAEjC,CAAA,GAAA,+UAAA,CAAA,sBAAA,EAAoB;QAClB,OAAO,6BAAA,GAAgC,+TAAA,CAAA,4BAAA;IACzC,GAAG,EAAE;IAEL,CAAA,GAAA,+UAAA,CAAA,sBAAA,EAAoB;QAClB,OAAO,4BAAA,GAA+B;YAIpC,IAAI,8CAA8C;gBAChD,KAAK,KAAK,OAAO,QAAA,CAAS,IAAI;YAChC;QACF;IACF,GAAG,EAAE;IAEL,MAAM,WAAW,CAAC,KAAe,KAAK;IACtC,MAAM,kBAAkB,CAAC,KAAe,QAAQ;IAChD,MAAM,cAAc,CAAA,GAAA,gUAAA,CAAA,6BAAA,EAA2B;QAAE,GAAG,KAAA;QAAO,YAAY;QAAU,eAAe;IAAgB;IAIhH,MAAM,eAAA,CAAA,CAAe,KAAA,MAAM,mBAAA,KAAN,OAAA,KAAA,IAAA,GAA2B,iBAAA,KAAqB,MAAM,iBAAA;IAE3E,OACE,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,qUAAA,CAAA,2BAAA,EAAA;QAAyB,SAAS;IAAA,GACjC,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,uSAAA,CAAA,gBAAA,EAAA;QACE,GAAG,WAAA;QACJ;IAAA,GAEA,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,2TAAA,CAAA,gBAAA,EAAA;QAAc,QAAO;IAAA,IACrB;AAIT"}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/ClerkProvider.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/compat/router';\nimport React from 'react';\n\nimport { ClientClerkProvider } from '../app-router/client/ClerkProvider';\nimport { ClerkProvider as PageClerkProvider } from '../pages/ClerkProvider';\nimport { type NextClerkProviderProps } from '../types';\n\n/**\n * This is a compatibility layer to support a single ClerkProvider component in both the app and pages routers.\n */\nexport function ClerkProvider(props: NextClerkProviderProps) {\n  const router = useRouter();\n\n  const Provider = router ? PageClerkProvider : ClientClerkProvider;\n\n  return <Provider {...props} />;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAYO,SAAS,cAAc,KAAA;IAC5B,MAAM,SAAS,CAAA,GAAA,gPAAA,CAAA,YAAA;IAEf,MAAM,WAAW,SAAS,mTAAA,CAAA,gBAAA,GAAoB,qUAAA,CAAA,sBAAA;IAE9C,OAAO,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,UAAA;QAAU,GAAG,KAAA;IAAA;AACvB"}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/index.ts"],"sourcesContent":["/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  AuthenticateWithRedirectCallback,\n  ClerkLoaded,\n  ClerkLoading,\n  RedirectToCreateOrganization,\n  RedirectToOrganizationProfile,\n  RedirectToSignIn,\n  RedirectToSignUp,\n  RedirectToUserProfile,\n} from './client-boundary/controlComponents';\n\n/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  CreateOrganization,\n  OrganizationList,\n  OrganizationProfile,\n  OrganizationSwitcher,\n  SignIn,\n  SignInButton,\n  SignInWithMetamaskButton,\n  SignOutButton,\n  SignUp,\n  SignUpButton,\n  UserButton,\n  UserProfile,\n  GoogleOneTap,\n} from './client-boundary/uiComponents';\n\n/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  useAuth,\n  useClerk,\n  useEmailLink,\n  useOrganization,\n  useOrganizationList,\n  useSession,\n  useSessionList,\n  useSignIn,\n  useSignUp,\n  useUser,\n} from './client-boundary/hooks';\n\n/**\n * Conditionally export components that exhibit different behavior\n * when used in /app vs /pages.\n * We defined the runtime and the type values explicitly,\n * because TS will not recognize the subpath import unless the HOST\n * application sets moduleResolution to 'NodeNext'.\n */\n// @ts-ignore\nimport * as ComponentsModule from '#components';\n\nimport type { ServerComponentsServerModuleTypes } from './components.server';\n\nexport const ClerkProvider = ComponentsModule.ClerkProvider as ServerComponentsServerModuleTypes['ClerkProvider'];\nexport const SignedIn = ComponentsModule.SignedIn as ServerComponentsServerModuleTypes['SignedIn'];\nexport const SignedOut = ComponentsModule.SignedOut as ServerComponentsServerModuleTypes['SignedOut'];\nexport const Protect = ComponentsModule.Protect as ServerComponentsServerModuleTypes['Protect'];\n"],"names":[],"mappings":";;;;;;;;;;;;AAgEO,MAAM,gBAAgB,kUAAiB,aAAA;AACvC,MAAM,WAAW,kUAAiB,QAAA;AAClC,MAAM,YAAY,kUAAiB,SAAA;AACnC,MAAM,UAAU,kUAAiB,OAAA"}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/hooks/usePagesRouter.tsx"],"sourcesContent":["import { useRouter } from 'next/compat/router';\n\nexport const usePagesRouter = () => {\n  // The compat version of useRouter returns null instead of throwing an error\n  // when used inside app router instead of pages router\n  // we use it to detect if the component is used inside pages or app router\n  // so we can use the correct algorithm to get the path\n  return { pagesRouter: useRouter() };\n};\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,iBAAiB;IAK5B,OAAO;QAAE,aAAa,CAAA,GAAA,gPAAA,CAAA,YAAA;IAAY;AACpC"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/hooks/useEnforceCatchAllRoute.tsx"],"sourcesContent":["import { isProductionEnvironment } from '@clerk/shared';\nimport type { RoutingStrategy } from '@clerk/types';\nimport React from 'react';\n\nimport { useSession } from '../hooks';\nimport { usePagesRouter } from './usePagesRouter';\n\n/**\n * This ugly hook  enforces that the Clerk components are mounted in a catch-all route\n * For pages router, we can parse the pathname we get from the useRouter hook\n * For app router, there is no reliable way to do the same check right now, so we\n * fire a request to a path under window.location.href and we check whether the path\n * exists or not\n */\nexport const useEnforceCatchAllRoute = (\n  component: string,\n  path: string,\n  routing?: RoutingStrategy,\n  requireSessionBeforeCheck = true,\n) => {\n  const ref = React.useRef(0);\n  const { pagesRouter } = usePagesRouter();\n  const { session, isLoaded } = useSession();\n\n  // This check does not break the rules of hooks\n  // as the condition will remain the same for the whole app lifecycle\n  if (isProductionEnvironment()) {\n    return;\n  }\n\n  React.useEffect(() => {\n    if (!isLoaded || (routing && routing !== 'path')) {\n      return;\n    }\n\n    // For components that require an active session, like UserProfile\n    // we should not enforce the catch-all route if there is no session\n    // because these components are usually protected by the middleware\n    // and if the check runs before the session is available, it will fail\n    // even if the route is a catch-all route, as the check request will result\n    // in a 404 because of auth().protect();\n    if (requireSessionBeforeCheck && !session) {\n      return;\n    }\n\n    const ac = new AbortController();\n    const error = () => {\n      const correctPath = pagesRouter ? `${path}/[[...index]].tsx` : `${path}/[[...rest]]/page.tsx`;\n      throw new Error(\n        `\nClerk: The <${component}/> component is not configured correctly. The most likely reasons for this error are:\n\n1. The \"${path}\" route is not a catch-all route.\nIt is recommended to convert this route to a catch-all route, eg: \"${correctPath}\". Alternatively, you can update the <${component}/> component to use hash-based routing by setting the \"routing\" prop to \"hash\".\n\n2. The <${component}/> component is mounted in a catch-all route, but all routes under \"${path}\" are protected by the middleware.\nTo resolve this, ensure that the middleware does not protect the catch-all route or any of its children. If you are using the \"createRouteMatcher\" helper, consider adding \"(.*)\" to the end of the route pattern, eg: \"${path}(.*)\". For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware#create-route-matcher\n`,\n      );\n    };\n\n    if (pagesRouter) {\n      if (!pagesRouter.pathname.match(/\\[\\[\\.\\.\\..+]]/)) {\n        error();\n      }\n    } else {\n      const check = async () => {\n        // make sure to run this as soon as possible\n        // but don't run again when strict mode is enabled\n        ref.current++;\n        if (ref.current > 1) {\n          return;\n        }\n        let res;\n        try {\n          const url = `${window.location.origin}${\n            window.location.pathname\n          }/${component}_clerk_catchall_check_${Date.now()}`;\n          res = await fetch(url, { signal: ac.signal });\n        } catch (e) {\n          // no op\n        }\n        if (res?.status === 404) {\n          error();\n        }\n      };\n      void check();\n    }\n\n    return () => {\n      // make sure to run this as soon as possible\n      // but don't run again when strict mode is enabled\n      if (ref.current > 1) {\n        ac.abort();\n      }\n    };\n  }, [isLoaded]);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;AAcO,MAAM,0BAA0B,CACrC,WACA,MACA,SACA,4BAA4B,IAAA;IAE5B,MAAM,MAAM,kQAAA,CAAA,UAAA,CAAM,MAAA,CAAO;IACzB,MAAM,EAAE,WAAA,EAAY,GAAI,CAAA,GAAA,0UAAA,CAAA,iBAAA;IACxB,MAAM,EAAE,OAAA,EAAS,QAAA,EAAS,GAAI,CAAA,GAAA,gRAAA,CAAA,aAAA;IAI9B,IAAI,CAAA,GAAA,mRAAA,CAAA,0BAAA,KAA2B;QAC7B;IACF;IAEA,kQAAA,CAAA,UAAA,CAAM,SAAA,CAAU;QACd,IAAI,CAAC,YAAa,WAAW,YAAY,QAAS;YAChD;QACF;QAQA,IAAI,6BAA6B,CAAC,SAAS;YACzC;QACF;QAEA,MAAM,KAAK,IAAI;QACf,MAAM,QAAQ;YACZ,MAAM,cAAc,cAAc,CAAA,EAAG,KAAI,iBAAA,CAAA,GAAsB,CAAA,EAAG,KAAI,qBAAA,CAAA;YACtE,MAAM,IAAI,MACR,CAAA;YAAA,EACM,UAAS;;QAAA,EAEb,KAAI;mEAAA,EACuD,YAAW,sCAAA,EAAyC,UAAS;;QAAA,EAExH,UAAS,oEAAA,EAAuE,KAAI;wNAAA,EAC4H,KAAI;AAAA,CAAA;QAG1N;QAEA,IAAI,aAAa;YACf,IAAI,CAAC,YAAY,QAAA,CAAS,KAAA,CAAM,mBAAmB;gBACjD;YACF;QACF,OAAO;YACL,MAAM,QAAQ;gBAGZ,IAAI,OAAA;gBACJ,IAAI,IAAI,OAAA,GAAU,GAAG;oBACnB;gBACF;gBACA,IAAI;gBACJ,IAAI;oBACF,MAAM,MAAM,CAAA,EAAG,OAAO,QAAA,CAAS,MAAM,CAAA,EACnC,OAAO,QAAA,CAAS,QAClB,CAAA,CAAA,EAAI,UAAS,sBAAA,EAAyB,KAAK,GAAA,GAAK,CAAA;oBAChD,MAAM,MAAM,MAAM,KAAK;wBAAE,QAAQ,GAAG,MAAA;oBAAO;gBAC7C,EAAA,OAAS,GAAG,CAEZ;gBACA,IAAA,CAAI,OAAA,OAAA,KAAA,IAAA,IAAK,MAAA,MAAW,KAAK;oBACvB;gBACF;YACF;YACA,KAAK;QACP;QAEA,OAAO;YAGL,IAAI,IAAI,OAAA,GAAU,GAAG;gBACnB,GAAG,KAAA;YACL;QACF;IACF,GAAG;QAAC;KAAS;AACf"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/hooks/usePathnameWithoutCatchAll.tsx"],"sourcesContent":["import React from 'react';\n\nimport { usePagesRouter } from './usePagesRouter';\n\nexport const usePathnameWithoutCatchAll = () => {\n  const pathRef = React.useRef<string>();\n\n  const { pagesRouter } = usePagesRouter();\n\n  if (pagesRouter) {\n    if (pathRef.current) {\n      return pathRef.current;\n    } else {\n      // in pages router things are simpler as the pathname includes the catch all route\n      // which starts with [[... and we can just remove it\n      pathRef.current = pagesRouter.pathname.replace(/\\/\\[\\[\\.\\.\\..*/, '');\n      return pathRef.current;\n    }\n  }\n\n  // require is used to avoid importing next/navigation when the pages router is used,\n  // as it will throw an error. We cannot use dynamic import as it is async\n  // and we need the hook to be sync\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const usePathname = require('next/navigation').usePathname;\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const useParams = require('next/navigation').useParams;\n\n  // Get the pathname that includes any named or catch all params\n  // eg:\n  // the filesystem route /user/[id]/profile/[[...rest]]/page.tsx\n  // could give us the following pathname /user/123/profile/security\n  // if the user navigates to the security section of the user profile\n  const pathname = usePathname() || '';\n  const pathParts = pathname.split('/').filter(Boolean);\n  // the useParams hook returns an object with all named and catch all params\n  // for named params, the key in the returned object always contains a single value\n  // for catch all params, the key in the returned object contains an array of values\n  // we find the catch all params by checking if the value is an array\n  // and then we remove one path part for each catch all param\n  const catchAllParams = Object.values(useParams() || {})\n    .filter(v => Array.isArray(v))\n    .flat(Infinity);\n  // so we end up with the pathname where the components are mounted at\n  // eg /user/123/profile/security will return /user/123/profile as the path\n  if (pathRef.current) {\n    return pathRef.current;\n  } else {\n    pathRef.current = `/${pathParts.slice(0, pathParts.length - catchAllParams.length).join('/')}`;\n    return pathRef.current;\n  }\n};\n"],"names":[],"mappings":";;;;;;;;AAIO,MAAM,6BAA6B;IACxC,MAAM,UAAU,kQAAA,CAAA,UAAA,CAAM,MAAA;IAEtB,MAAM,EAAE,WAAA,EAAY,GAAI,CAAA,GAAA,0UAAA,CAAA,iBAAA;IAExB,IAAI,aAAa;QACf,IAAI,QAAQ,OAAA,EAAS;YACnB,OAAO,QAAQ,OAAA;QACjB,OAAO;YAGL,QAAQ,OAAA,GAAU,YAAY,QAAA,CAAS,OAAA,CAAQ,kBAAkB;YACjE,OAAO,QAAQ,OAAA;QACjB;IACF;IAMA,MAAM,cAAc,0JAA2B,WAAA;IAE/C,MAAM,YAAY,0JAA2B,SAAA;IAO7C,MAAM,WAAW,iBAAiB;IAClC,MAAM,YAAY,SAAS,KAAA,CAAM,KAAK,MAAA,CAAO;IAM7C,MAAM,iBAAiB,OAAO,MAAA,CAAO,eAAe,CAAC,GAClD,MAAA,CAAO,CAAA,IAAK,MAAM,OAAA,CAAQ,IAC1B,IAAA,CAAK;IAGR,IAAI,QAAQ,OAAA,EAAS;QACnB,OAAO,QAAQ,OAAA;IACjB,OAAO;QACL,QAAQ,OAAA,GAAU,CAAA,CAAA,EAAI,UAAU,KAAA,CAAM,GAAG,UAAU,MAAA,GAAS,eAAe,MAAM,EAAE,IAAA,CAAK,KAAI,CAAA;QAC5F,OAAO,QAAQ,OAAA;IACjB;AACF"}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 717, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/hooks/useEnforceRoutingProps.tsx"],"sourcesContent":["import { useRoutingProps } from '@clerk/clerk-react/internal';\nimport type { RoutingOptions } from '@clerk/types';\n\nimport { useEnforceCatchAllRoute } from './useEnforceCatchAllRoute';\nimport { usePathnameWithoutCatchAll } from './usePathnameWithoutCatchAll';\n\nexport function useEnforceCorrectRoutingProps<T extends RoutingOptions>(\n  componentName: string,\n  props: T,\n  requireSessionBeforeCheck = true,\n): T {\n  const path = usePathnameWithoutCatchAll();\n  const routingProps = useRoutingProps(componentName, props, { path });\n  useEnforceCatchAllRoute(componentName, path, routingProps.routing, requireSessionBeforeCheck);\n  return routingProps;\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAMO,SAAS,8BACd,aAAA,EACA,KAAA,EACA,4BAA4B,IAAA;IAE5B,MAAM,OAAO,CAAA,GAAA,sVAAA,CAAA,6BAAA;IACb,MAAM,eAAe,CAAA,GAAA,0SAAA,CAAA,kBAAA,EAAgB,eAAe,OAAO;QAAE;IAAK;IAClE,CAAA,GAAA,mVAAA,CAAA,0BAAA,EAAwB,eAAe,MAAM,aAAa,OAAA,EAAS;IACnE,OAAO;AACT"}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@clerk+nextjs@5.3.6_next@14.2.7_react-dom@18.3.1_react@18.3.1/node_modules/@clerk/nextjs/src/client-boundary/uiComponents.tsx"],"sourcesContent":["'use client';\n\nimport {\n  CreateOrganization as BaseCreateOrganization,\n  OrganizationProfile as BaseOrganizationProfile,\n  SignIn as BaseSignIn,\n  SignUp as BaseSignUp,\n  UserProfile as BaseUserProfile,\n} from '@clerk/clerk-react';\nimport type {\n  CreateOrganizationProps,\n  OrganizationProfileProps,\n  SignInProps,\n  SignUpProps,\n  UserProfileProps,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { useEnforceCorrectRoutingProps } from './hooks/useEnforceRoutingProps';\n\nexport {\n  OrganizationList,\n  OrganizationSwitcher,\n  SignInButton,\n  SignInWithMetamaskButton,\n  SignOutButton,\n  SignUpButton,\n  UserButton,\n  GoogleOneTap,\n} from '@clerk/clerk-react';\n\n// The assignment of UserProfile with BaseUserProfile props is used\n// to support the CustomPage functionality (eg UserProfile.Page)\n// Also the `typeof BaseUserProfile` is used to resolve the following error:\n// \"The inferred type of 'UserProfile' cannot be named without a reference to ...\"\nexport const UserProfile: typeof BaseUserProfile = Object.assign(\n  (props: UserProfileProps) => {\n    return <BaseUserProfile {...useEnforceCorrectRoutingProps('UserProfile', props)} />;\n  },\n  { ...BaseUserProfile },\n);\n\nexport const CreateOrganization = (props: CreateOrganizationProps) => {\n  return <BaseCreateOrganization {...useEnforceCorrectRoutingProps('CreateOrganization', props)} />;\n};\n\n// The assignment of OrganizationProfile with BaseOrganizationProfile props is used\n// to support the CustomPage functionality (eg OrganizationProfile.Page)\n// Also the `typeof BaseOrganizationProfile` is used to resolved the following error:\n// \"The inferred type of 'OrganizationProfile' cannot be named without a reference to ...\"\nexport const OrganizationProfile: typeof BaseOrganizationProfile = Object.assign(\n  (props: OrganizationProfileProps) => {\n    return <BaseOrganizationProfile {...useEnforceCorrectRoutingProps('OrganizationProfile', props)} />;\n  },\n  { ...BaseOrganizationProfile },\n);\n\nexport const SignIn = (props: SignInProps) => {\n  return <BaseSignIn {...useEnforceCorrectRoutingProps('SignIn', props, false)} />;\n};\n\nexport const SignUp = (props: SignUpProps) => {\n  return <BaseSignUp {...useEnforceCorrectRoutingProps('SignUp', props, false)} />;\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAmCO,MAAM,cAAsC,OAAO,MAAA,CACxD,CAAC;IACC,OAAO,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,uSAAA,CAAA,cAAA,EAAA;QAAiB,GAAG,CAAA,GAAA,kVAAA,CAAA,gCAAA,EAA8B,eAAe,MAAK;IAAA;AAChF,GACA;IAAE,GAAG,uSAAA,CAAA,cAAA;AAAgB;AAGhB,MAAM,qBAAqB,CAAC;IACjC,OAAO,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,uSAAA,CAAA,qBAAA,EAAA;QAAwB,GAAG,CAAA,GAAA,kVAAA,CAAA,gCAAA,EAA8B,sBAAsB,MAAK;IAAA;AAC9F;AAMO,MAAM,sBAAsD,OAAO,MAAA,CACxE,CAAC;IACC,OAAO,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,uSAAA,CAAA,sBAAA,EAAA;QAAyB,GAAG,CAAA,GAAA,kVAAA,CAAA,gCAAA,EAA8B,uBAAuB,MAAK;IAAA;AAChG,GACA;IAAE,GAAG,uSAAA,CAAA,sBAAA;AAAwB;AAGxB,MAAM,SAAS,CAAC;IACrB,OAAO,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,uSAAA,CAAA,SAAA,EAAA;QAAY,GAAG,CAAA,GAAA,kVAAA,CAAA,gCAAA,EAA8B,UAAU,OAAO,MAAK;IAAA;AAC7E;AAEO,MAAM,SAAS,CAAC;IACrB,OAAO,aAAA,GAAA,kQAAA,CAAA,UAAA,CAAA,aAAA,CAAC,uSAAA,CAAA,SAAA,EAAA;QAAY,GAAG,CAAA,GAAA,kVAAA,CAAA,gCAAA,EAA8B,UAAU,OAAO,MAAK;IAAA;AAC7E"}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}